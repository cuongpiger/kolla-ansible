find: ‘/etc/kolla/globals.d’: No such file or directory
Deploying Playbooks : ansible-playbook -e @/etc/kolla/globals.yml  -e @/etc/kolla/passwords.yml -e CONFIG_DIR=/etc/kolla  -e kolla_action=deploy /usr/local/share/kolla-ansible/ansible/site.yml  --inventory ./all-in-one
[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

PLAY [Gather facts for all hosts] **********************************************************************************************************************************************************************************************************************************************

TASK [Gather facts] ************************************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Group hosts to determine when using --limit] *****************************************************************************************************************************************************************************************************************************
ok: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: all_using_limit_True

PLAY [Gather facts for all hosts (if using --limit)] ***************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Group hosts based on configuration] **************************************************************************************************************************************************************************************************************************************

TASK [Group hosts based on Kolla action] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Group hosts based on enabled services] ***********************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=enable_aodh_False)
ok: [localhost] => (item=enable_barbican_False)
ok: [localhost] => (item=enable_blazar_False)
ok: [localhost] => (item=enable_ceilometer_False)
ok: [localhost] => (item=enable_ceph_rgw_False)
ok: [localhost] => (item=enable_cinder_False)
ok: [localhost] => (item=enable_cloudkitty_False)
ok: [localhost] => (item=enable_collectd_False)
ok: [localhost] => (item=enable_cyborg_False)
ok: [localhost] => (item=enable_designate_False)
ok: [localhost] => (item=enable_etcd_False)
ok: [localhost] => (item=enable_freezer_False)
ok: [localhost] => (item=enable_glance_True)
ok: [localhost] => (item=enable_gnocchi_False)
ok: [localhost] => (item=enable_grafana_False)
ok: [localhost] => (item=enable_hacluster_False)
ok: [localhost] => (item=enable_heat_True)
ok: [localhost] => (item=enable_horizon_True)
ok: [localhost] => (item=enable_influxdb_False)
ok: [localhost] => (item=enable_ironic_False)
ok: [localhost] => (item=enable_iscsid_False)
ok: [localhost] => (item=enable_keystone_True)
ok: [localhost] => (item=enable_kuryr_False)
ok: [localhost] => (item=enable_loadbalancer_True)
ok: [localhost] => (item=enable_magnum_False)
ok: [localhost] => (item=enable_manila_False)
ok: [localhost] => (item=enable_mariadb_True)
ok: [localhost] => (item=enable_masakari_False)
ok: [localhost] => (item=enable_memcached_True)
ok: [localhost] => (item=enable_mistral_False)
ok: [localhost] => (item=enable_multipathd_False)
ok: [localhost] => (item=enable_murano_False)
ok: [localhost] => (item=enable_neutron_True)
ok: [localhost] => (item=enable_nova_True)
ok: [localhost] => (item=enable_octavia_Fals)
ok: [localhost] => (item=enable_opensearch_True)
ok: [localhost] => (item=enable_opensearch_dashboards_True)
ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
ok: [localhost] => (item=enable_outward_rabbitmq_False)
ok: [localhost] => (item=enable_ovn_False)
ok: [localhost] => (item=enable_placement_True)
ok: [localhost] => (item=enable_prometheus_False)
ok: [localhost] => (item=enable_rabbitmq_True)
ok: [localhost] => (item=enable_redis_False)
ok: [localhost] => (item=enable_sahara_False)
ok: [localhost] => (item=enable_senlin_False)
ok: [localhost] => (item=enable_skydive_False)
ok: [localhost] => (item=enable_solum_False)
ok: [localhost] => (item=enable_swift_False)
ok: [localhost] => (item=enable_tacker_False)
ok: [localhost] => (item=enable_telegraf_False)
ok: [localhost] => (item=enable_trove_False)
ok: [localhost] => (item=enable_venus_False)
ok: [localhost] => (item=enable_vitrage_False)
ok: [localhost] => (item=enable_watcher_False)
ok: [localhost] => (item=enable_zun_False)
[WARNING]: Could not match supplied host pattern, ignoring: kolla_action_precheck

PLAY [Apply role prechecks] ****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role common] *******************************************************************************************************************************************************************************************************************************************************

TASK [common : include_tasks] **************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost

TASK [common : Ensuring config directories exist] ******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
changed: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd'])
changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])

TASK [common : include_tasks] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [common : Copying over config.json files for services] ********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/fluentd:zed-ubuntu-jammy', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/kolla-toolbox:zed-ubuntu-jammy', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})
changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/cron:zed-ubuntu-jammy', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})

TASK [common : Find custom fluentd input config files] *************************************************************************************************************************************************************************************************************************
[WARNING]: Skipped '/etc/kolla/config/fluentd/input' path due to this access issue: '/etc/kolla/config/fluentd/input' is not a directory
ok: [localhost]

TASK [common : Find custom fluentd filter config files] ************************************************************************************************************************************************************************************************************************
[WARNING]: Skipped '/etc/kolla/config/fluentd/filter' path due to this access issue: '/etc/kolla/config/fluentd/filter' is not a directory
ok: [localhost]

TASK [common : Find custom fluentd format config files] ************************************************************************************************************************************************************************************************************************
[WARNING]: Skipped '/etc/kolla/config/fluentd/format' path due to this access issue: '/etc/kolla/config/fluentd/format' is not a directory
ok: [localhost]

TASK [common : Find custom fluentd output config files] ************************************************************************************************************************************************************************************************************************
[WARNING]: Skipped '/etc/kolla/config/fluentd/output' path due to this access issue: '/etc/kolla/config/fluentd/output' is not a directory
ok: [localhost]

TASK [common : Copying over td-agent.conf] *************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [common : Copying over cron logrotate config file] ************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [common : Ensuring config directories have correct owner and permission] **************************************************************************************************************************************************************************************************
ok: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/fluentd:zed-ubuntu-jammy', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/kolla-toolbox:zed-ubuntu-jammy', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/cron:zed-ubuntu-jammy', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})

TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)

TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)

TASK [common : Check common containers] ****************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/fluentd:zed-ubuntu-jammy', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/kolla-toolbox:zed-ubuntu-jammy', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})
changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/cron:zed-ubuntu-jammy', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})

TASK [common : Creating log volume] ********************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [common : Flush handlers] *************************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [common : Restart fluentd container] ***************************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [common : Restart kolla-toolbox container] *********************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [common : Initializing toolbox container using normal user] ****************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [common : Restart cron container] ******************************************************************************************************************************************************************************************************************************
changed: [localhost]

PLAY [Apply role loadbalancer] *************************************************************************************************************************************************************************************************************************************************

TASK [loadbalancer : include_tasks] ********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/loadbalancer/tasks/deploy.yml for localhost

TASK [loadbalancer : Setting sysctl values] ************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'net.ipv4.ip_nonlocal_bind', 'value': 1})
changed: [localhost] => (item={'name': 'net.ipv6.ip_nonlocal_bind', 'value': 1})
ok: [localhost] => (item={'name': 'net.ipv4.tcp_retries2', 'value': 'KOLLA_UNSET'})
changed: [localhost] => (item={'name': 'net.unix.max_dgram_qlen', 'value': 128})

TASK [module-load : Load modules] **********************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=ip_vs)

TASK [module-load : Persist modules via modules-load.d] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=ip_vs)

TASK [module-load : Drop module persistence] ***********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=ip_vs) 

TASK [loadbalancer : Ensuring config directories exist] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'haproxy', 'value': {'container_name': 'haproxy', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/haproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'haproxy_socket:/var/lib/kolla/haproxy/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:61313'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'proxysql', 'value': {'container_name': 'proxysql', 'group': 'loadbalancer', 'enabled': False, 'image': 'quay.io/openstack.kolla/proxysql:zed-ubuntu-jammy', 'privileged': False, 'volumes': ['/etc/kolla/proxysql/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'proxysql:/var/lib/proxysql/', 'proxysql_socket:/var/lib/kolla/proxysql/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen proxysql 6032'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'keepalived', 'value': {'container_name': 'keepalived', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/keepalived:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/keepalived/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'haproxy_socket:/var/lib/kolla/haproxy/', ''], 'dimensions': {}}})

TASK [loadbalancer : Ensuring haproxy service config subdir exists] ************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [loadbalancer : Ensuring proxysql service config subdirectories exist] ****************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=users) 
skipping: [localhost] => (item=rules) 

TASK [loadbalancer : Ensuring keepalived checks subdir exists] *****************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [loadbalancer : Remove mariadb.cfg if proxysql enabled] *******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Removing checks for services which are disabled] **********************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'haproxy', 'value': {'container_name': 'haproxy', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/haproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'haproxy_socket:/var/lib/kolla/haproxy/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:61313'], 'timeout': '30'}}}) 
ok: [localhost] => (item={'key': 'proxysql', 'value': {'container_name': 'proxysql', 'group': 'loadbalancer', 'enabled': False, 'image': 'quay.io/openstack.kolla/proxysql:zed-ubuntu-jammy', 'privileged': False, 'volumes': ['/etc/kolla/proxysql/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'proxysql:/var/lib/proxysql/', 'proxysql_socket:/var/lib/kolla/proxysql/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen proxysql 6032'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'keepalived', 'value': {'container_name': 'keepalived', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/keepalived:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/keepalived/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'haproxy_socket:/var/lib/kolla/haproxy/', ''], 'dimensions': {}}}) 

TASK [loadbalancer : Copying checks for services which are enabled] ************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'haproxy', 'value': {'container_name': 'haproxy', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/haproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'haproxy_socket:/var/lib/kolla/haproxy/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:61313'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'proxysql', 'value': {'container_name': 'proxysql', 'group': 'loadbalancer', 'enabled': False, 'image': 'quay.io/openstack.kolla/proxysql:zed-ubuntu-jammy', 'privileged': False, 'volumes': ['/etc/kolla/proxysql/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'proxysql:/var/lib/proxysql/', 'proxysql_socket:/var/lib/kolla/proxysql/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen proxysql 6032'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'keepalived', 'value': {'container_name': 'keepalived', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/keepalived:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/keepalived/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'haproxy_socket:/var/lib/kolla/haproxy/', ''], 'dimensions': {}}}) 

TASK [loadbalancer : Copying over config.json files for services] **************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'haproxy', 'value': {'container_name': 'haproxy', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/haproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'haproxy_socket:/var/lib/kolla/haproxy/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:61313'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'proxysql', 'value': {'container_name': 'proxysql', 'group': 'loadbalancer', 'enabled': False, 'image': 'quay.io/openstack.kolla/proxysql:zed-ubuntu-jammy', 'privileged': False, 'volumes': ['/etc/kolla/proxysql/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'proxysql:/var/lib/proxysql/', 'proxysql_socket:/var/lib/kolla/proxysql/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen proxysql 6032'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'keepalived', 'value': {'container_name': 'keepalived', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/keepalived:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/keepalived/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'haproxy_socket:/var/lib/kolla/haproxy/', ''], 'dimensions': {}}})

TASK [loadbalancer : Copying over haproxy.cfg] *********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/loadbalancer/templates/haproxy/haproxy_main.cfg.j2)

TASK [loadbalancer : Copying over proxysql config] *****************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/loadbalancer/templates/proxysql/proxysql.yaml.j2) 

TASK [loadbalancer : Copying over custom haproxy services configuration] *******************************************************************************************************************************************************************************************************
[WARNING]: Unable to find '/etc/kolla/config/haproxy/services.d' in expected paths (use -vvvvv to see paths)

TASK [loadbalancer : Copying over keepalived.conf] *****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/loadbalancer/templates/keepalived/keepalived.conf.j2)

TASK [loadbalancer : Copying over haproxy.pem] *********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=haproxy.pem) 

TASK [loadbalancer : Copying over haproxy-internal.pem] ************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=haproxy-internal.pem) 

TASK [loadbalancer : include_tasks] ********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Copying over haproxy start script] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/loadbalancer/templates/haproxy/haproxy_run.sh.j2)

TASK [loadbalancer : Copying over proxysql start script] ***********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/loadbalancer/templates/proxysql/proxysql_run.sh.j2) 

TASK [loadbalancer : Check loadbalancer containers] ****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'haproxy', 'value': {'container_name': 'haproxy', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/haproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'haproxy_socket:/var/lib/kolla/haproxy/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:61313'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'proxysql', 'value': {'container_name': 'proxysql', 'group': 'loadbalancer', 'enabled': False, 'image': 'quay.io/openstack.kolla/proxysql:zed-ubuntu-jammy', 'privileged': False, 'volumes': ['/etc/kolla/proxysql/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'proxysql:/var/lib/proxysql/', 'proxysql_socket:/var/lib/kolla/proxysql/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen proxysql 6032'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'keepalived', 'value': {'container_name': 'keepalived', 'group': 'loadbalancer', 'enabled': True, 'image': 'quay.io/openstack.kolla/keepalived:zed-ubuntu-jammy', 'privileged': True, 'volumes': ['/etc/kolla/keepalived/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'haproxy_socket:/var/lib/kolla/haproxy/', ''], 'dimensions': {}}})

TASK [include_role : aodh] *****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : barbican] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : blazar] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : ceph-rgw] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : cinder] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : cloudkitty] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : cyborg] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : designate] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : etcd] *****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : freezer] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : glance] ***************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over glance haproxy config] *********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'glance-api', 'value': {'container_name': 'glance_api', 'group': 'glance-api', 'host_in_groups': True, 'enabled': True, 'image': 'quay.io/openstack.kolla/glance-api:zed-ubuntu-jammy', 'environment': {'http_proxy': '', 'https_proxy': '', 'no_proxy': 'localhost,127.0.0.1,10.0.2.15,10.0.2.250'}, 'privileged': False, 'volumes': ['/etc/kolla/glance-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'glance:/var/lib/glance/', '', 'kolla_logs:/var/log/kolla/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9292'], 'timeout': '30'}, 'haproxy': {'glance_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}, 'glance_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}}}})
skipping: [localhost] => (item={'key': 'glance-tls-proxy', 'value': {'container_name': 'glance_tls_proxy', 'group': 'glance-api', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/glance-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9293'], 'timeout': '30'}, 'haproxy': {'glance_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}, 'glance_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}}}}) 

TASK [haproxy-config : Configuring firewall for glance] ************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'glance_api', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}}) 
skipping: [localhost] => (item={'key': 'glance_api_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}}) 

TASK [proxysql-config : Copying over glance ProxySQL users config] *************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over glance ProxySQL rules config] *************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : gnocchi] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : grafana] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : heat] *****************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over heat haproxy config] ***********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'heat-api', 'value': {'container_name': 'heat_api', 'group': 'heat-api', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8004'], 'timeout': '30'}, 'haproxy': {'heat_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}, 'heat_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-api-cfn', 'value': {'container_name': 'heat_api_cfn', 'group': 'heat-api-cfn', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api-cfn:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api-cfn/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8000'], 'timeout': '30'}, 'haproxy': {'heat_api_cfn': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}, 'heat_api_cfn_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}}})
skipping: [localhost] => (item={'key': 'heat-engine', 'value': {'container_name': 'heat_engine', 'group': 'heat-engine', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-engine:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-engine/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port heat-engine 5672'], 'timeout': '30'}}}) 

TASK [haproxy-config : Configuring firewall for heat] **************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'heat_api', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'heat_api_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'heat_api_cfn', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'heat_api_cfn_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}) 

TASK [proxysql-config : Copying over heat ProxySQL users config] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over heat ProxySQL rules config] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : horizon] **************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over horizon haproxy config] ********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'horizon', 'value': {'container_name': 'horizon', 'group': 'horizon', 'enabled': True, 'image': 'quay.io/openstack.kolla/horizon:zed-ubuntu-jammy', 'environment': {'ENABLE_BLAZAR': 'no', 'ENABLE_CLOUDKITTY': 'no', 'ENABLE_DESIGNATE': 'no', 'ENABLE_FREEZER': 'no', 'ENABLE_HEAT': 'yes', 'ENABLE_IRONIC': 'no', 'ENABLE_MAGNUM': 'no', 'ENABLE_MANILA': 'no', 'ENABLE_MASAKARI': 'no', 'ENABLE_MISTRAL': 'no', 'ENABLE_MURANO': 'no', 'ENABLE_NEUTRON_VPNAAS': 'no', 'ENABLE_OCTAVIA': 'no', 'ENABLE_SAHARA': 'no', 'ENABLE_SENLIN': 'no', 'ENABLE_SOLUM': 'no', 'ENABLE_TACKER': 'no', 'ENABLE_TROVE': 'no', 'ENABLE_VITRAGE': 'no', 'ENABLE_WATCHER': 'no', 'ENABLE_ZUN': 'no', 'FORCE_GENERATE': 'no'}, 'volumes': ['/etc/kolla/horizon/:/var/lib/kolla/config_files/:ro', '', '', '', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', '/tmp:/tmp'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:80'], 'timeout': '30'}, 'haproxy': {'horizon': {'enabled': True, 'mode': 'http', 'external': False, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}, 'horizon_redirect': {'enabled': False, 'mode': 'redirect', 'external': False, 'port': '80', 'listen_port': '80'}, 'horizon_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}, 'horizon_external_redirect': {'enabled': False, 'mode': 'redirect', 'external': True, 'port': '80', 'listen_port': '80'}, 'acme_client': {'enabled': True, 'with_frontend': False, 'custom_member_list': []}}}})

TASK [haproxy-config : Configuring firewall for horizon] ***********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'horizon', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'horizon_redirect', 'value': {'enabled': False, 'mode': 'redirect', 'external': False, 'port': '80', 'listen_port': '80'}}) 
skipping: [localhost] => (item={'key': 'horizon_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'horizon_external_redirect', 'value': {'enabled': False, 'mode': 'redirect', 'external': True, 'port': '80', 'listen_port': '80'}}) 
skipping: [localhost] => (item={'key': 'acme_client', 'value': {'enabled': True, 'with_frontend': False, 'custom_member_list': []}}) 

TASK [proxysql-config : Copying over horizon ProxySQL users config] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over horizon ProxySQL rules config] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : influxdb] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : ironic] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : keystone] *************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over keystone haproxy config] *******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5000'], 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': True, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': True, 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-ssh:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8023'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-fernet:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/fernet-healthcheck.sh'], 'timeout': '30'}}}) 

TASK [haproxy-config : Configuring firewall for keystone] **********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'keystone_internal', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}}) 
skipping: [localhost] => (item={'key': 'keystone_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}}) 
skipping: [localhost] => (item={'key': 'keystone_admin', 'value': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}) 

TASK [proxysql-config : Copying over keystone ProxySQL users config] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over keystone ProxySQL rules config] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : magnum] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : manila] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : mariadb] **************************************************************************************************************************************************************************************************************************************************

TASK [mariadb : Ensure mysql monitor user exist] *******************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=localhost)

TASK [haproxy-config : Copying over mariadb haproxy config] ********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'mariadb', 'value': {'container_name': 'mariadb', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-server:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'mariadb:/var/lib/mysql', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/clustercheck'], 'timeout': '30'}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}, 'haproxy': {'mariadb': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', 'option httpchk'], 'custom_member_list': [' server anas 10.0.2.15:3306 check port 4569 inter 2000 rise 2 fall 5', '']}, 'mariadb_external_lb': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server localhost localhost:3306 check port 4569 inter 2000 rise 2 fall 5', '']}}}})
skipping: [localhost] => (item={'key': 'mariadb-clustercheck', 'value': {'container_name': 'mariadb_clustercheck', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-clustercheck:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb-clustercheck/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}}}) 

TASK [haproxy-config : Configuring firewall for mariadb] ***********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'mariadb', 'value': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', 'option httpchk'], 'custom_member_list': [' server anas 10.0.2.15:3306 check port 4569 inter 2000 rise 2 fall 5', '']}}) 
skipping: [localhost] => (item={'key': 'mariadb_external_lb', 'value': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server localhost localhost:3306 check port 4569 inter 2000 rise 2 fall 5', '']}}) 

TASK [proxysql-config : Copying over mariadb ProxySQL users config] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over mariadb ProxySQL rules config] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : masakari] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : memcached] ************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over memcached haproxy config] ******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'memcached', 'value': {'container_name': 'memcached', 'image': 'quay.io/openstack.kolla/memcached:zed-ubuntu-jammy', 'enabled': True, 'group': 'memcached', 'volumes': ['/etc/kolla/memcached/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen memcached 11211'], 'timeout': '30'}, 'haproxy': {'memcached': {'enabled': False, 'mode': 'tcp', 'port': '11211', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'active_passive': True}}}})

TASK [haproxy-config : Configuring firewall for memcached] *********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'memcached', 'value': {'enabled': False, 'mode': 'tcp', 'port': '11211', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'active_passive': True}}) 

TASK [proxysql-config : Copying over memcached ProxySQL users config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over memcached ProxySQL rules config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : mistral] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : murano] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : neutron] **************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over neutron haproxy config] ********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}})
skipping: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [haproxy-config : Configuring firewall for neutron] ***********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'neutron_server', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}}) 
skipping: [localhost] => (item={'key': 'neutron_server_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}) 

TASK [proxysql-config : Copying over neutron ProxySQL users config] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over neutron ProxySQL rules config] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : placement] ************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over placement haproxy config] ******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'placement-api', 'value': {'container_name': 'placement_api', 'group': 'placement-api', 'image': 'quay.io/openstack.kolla/placement-api:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/placement-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8780'], 'timeout': '30'}, 'haproxy': {'placement_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}, 'placement_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}}})

TASK [haproxy-config : Configuring firewall for placement] *********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'placement_api', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'placement_api_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}) 

TASK [proxysql-config : Copying over placement ProxySQL users config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over placement ProxySQL rules config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : nova] *****************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over nova haproxy config] ***********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-api', 'value': {'container_name': 'nova_api', 'group': 'nova-api', 'image': 'quay.io/openstack.kolla/nova-api:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'volumes': ['/etc/kolla/nova-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8774 '], 'timeout': '30'}, 'haproxy': {'nova_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_metadata': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}, 'nova_metadata_external': {'enabled': 'no', 'mode': 'http', 'external': True, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}}})
skipping: [localhost] => (item={'key': 'nova-scheduler', 'value': {'container_name': 'nova_scheduler', 'group': 'nova-scheduler', 'image': 'quay.io/openstack.kolla/nova-scheduler:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-scheduler/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-scheduler 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-super-conductor', 'value': {'container_name': 'nova_super_conductor', 'group': 'nova-super-conductor', 'enabled': 'no', 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-super-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}}) 

TASK [haproxy-config : Configuring firewall for nova] **************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'nova_api', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'nova_api_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'nova_metadata', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}) 
skipping: [localhost] => (item={'key': 'nova_metadata_external', 'value': {'enabled': 'no', 'mode': 'http', 'external': True, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}) 

TASK [proxysql-config : Copying over nova ProxySQL users config] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over nova ProxySQL rules config] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : nova-cell] ************************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : Configure loadbalancer for nova-novncproxy] ******************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova-cell/tasks/cell_proxy_loadbalancer.yml for localhost => (item=nova-novncproxy)

TASK [haproxy-config : Copying over nova-cell:nova-novncproxy haproxy config] **************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-novncproxy', 'value': {'group': 'nova-novncproxy', 'enabled': True, 'haproxy': {'nova_novncproxy': {'enabled': True, 'mode': 'http', 'external': False, 'port': '6080', 'listen_port': '6080', 'backend_http_extra': ['timeout tunnel 1h']}, 'nova_novncproxy_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '6080', 'listen_port': '6080', 'backend_http_extra': ['timeout tunnel 1h']}}}})

TASK [haproxy-config : Configuring firewall for nova-cell:nova-novncproxy] *****************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'nova_novncproxy', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '6080', 'listen_port': '6080', 'backend_http_extra': ['timeout tunnel 1h']}}) 
skipping: [localhost] => (item={'key': 'nova_novncproxy_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '6080', 'listen_port': '6080', 'backend_http_extra': ['timeout tunnel 1h']}}) 

TASK [proxysql-config : Copying over nova-cell ProxySQL users config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over nova-cell ProxySQL rules config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Configure loadbalancer for nova-spicehtml5proxy] *************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova-cell/tasks/cell_proxy_loadbalancer.yml for localhost => (item=nova-spicehtml5proxy)

TASK [haproxy-config : Copying over nova-cell:nova-spicehtml5proxy haproxy config] *********************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'nova-spicehtml5proxy', 'value': {'group': 'nova-spicehtml5proxy', 'enabled': False, 'haproxy': {'nova_spicehtml5proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '6082', 'listen_port': '6082', 'backend_http_extra': ['timeout tunnel 1h']}, 'nova_spicehtml5proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '6082', 'listen_port': '6082', 'backend_http_extra': ['timeout tunnel 1h']}}}}) 

TASK [haproxy-config : Configuring firewall for nova-cell:nova-spicehtml5proxy] ************************************************************************************************************************************************************************************************

TASK [proxysql-config : Copying over nova-cell ProxySQL users config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over nova-cell ProxySQL rules config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Configure loadbalancer for nova-serialproxy] *****************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova-cell/tasks/cell_proxy_loadbalancer.yml for localhost => (item=nova-serialproxy)

TASK [haproxy-config : Copying over nova-cell:nova-serialproxy haproxy config] *************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'nova-serialproxy', 'value': {'group': 'nova-serialproxy', 'enabled': False, 'haproxy': {'nova_serialconsole_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '6083', 'listen_port': '6083', 'backend_http_extra': ['timeout tunnel 10m']}, 'nova_serialconsole_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '6083', 'listen_port': '6083', 'backend_http_extra': ['timeout tunnel 10m']}}}}) 

TASK [haproxy-config : Configuring firewall for nova-cell:nova-serialproxy] ****************************************************************************************************************************************************************************************************

TASK [proxysql-config : Copying over nova-cell ProxySQL users config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over nova-cell ProxySQL rules config] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : octavia] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : opensearch] ***********************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over opensearch haproxy config] *****************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'opensearch', 'value': {'container_name': 'opensearch', 'group': 'opensearch', 'enabled': True, 'image': 'quay.io/openstack.kolla/opensearch:zed-ubuntu-jammy', 'environment': {'OPENSEARCH_JAVA_OPTS': '-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true'}, 'volumes': ['/etc/kolla/opensearch/:/var/lib/kolla/config_files/', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'opensearch:/var/lib/opensearch/data', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9200'], 'timeout': '30'}, 'haproxy': {'opensearch': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9200', 'frontend_http_extra': ['option dontlog-normal']}}}})
changed: [localhost] => (item={'key': 'opensearch-dashboards', 'value': {'container_name': 'opensearch_dashboards', 'group': 'opensearch-dashboards', 'enabled': True, 'environment': {'OPENSEARCH_DASHBOARDS_SECURITY_PLUGIN': 'False'}, 'image': 'quay.io/openstack.kolla/opensearch-dashboards:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/opensearch-dashboards/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5601'], 'timeout': '30'}, 'haproxy': {'opensearch-dashboards': {'enabled': True, 'mode': 'http', 'external': False, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}, 'opensearch_dashboards_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}}}})

TASK [haproxy-config : Configuring firewall for opensearch] ********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'opensearch', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9200', 'frontend_http_extra': ['option dontlog-normal']}}) 
skipping: [localhost] => (item={'key': 'opensearch-dashboards', 'value': {'enabled': True, 'mode': 'http', 'external': False, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}}) 
skipping: [localhost] => (item={'key': 'opensearch_dashboards_external', 'value': {'enabled': True, 'mode': 'http', 'external': True, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}}) 

TASK [proxysql-config : Copying over opensearch ProxySQL users config] *********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over opensearch ProxySQL rules config] *********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : prometheus] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : rabbitmq] *************************************************************************************************************************************************************************************************************************************************

TASK [haproxy-config : Copying over rabbitmq haproxy config] *******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': None, 'enabled': True, 'image': 'quay.io/openstack.kolla/rabbitmq:zed-ubuntu-jammy', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': None, 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': None, 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_rabbitmq'], 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})

TASK [haproxy-config : Configuring firewall for rabbitmq] **********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'rabbitmq_management', 'value': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}}) 
skipping: [localhost] => (item={'key': 'rabbitmq_outward_management', 'value': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}}) 
skipping: [localhost] => (item={'key': 'rabbitmq_outward_external', 'value': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}) 

TASK [proxysql-config : Copying over rabbitmq ProxySQL users config] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [proxysql-config : Copying over rabbitmq ProxySQL rules config] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : sahara] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : senlin] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : skydive] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : solum] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : swift] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : tacker] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : trove] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : venus] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : vitrage] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : watcher] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : zun] ******************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Check IP addresses on the API interface] *******************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [loadbalancer : Group HA nodes by status] **********************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [loadbalancer : Stop backup keepalived container] **************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [loadbalancer : Stop backup haproxy container] *****************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [loadbalancer : Stop backup proxysql container] ****************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [loadbalancer : Start backup haproxy container] ****************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [loadbalancer : Wait for backup haproxy to start] **************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [loadbalancer : Start backup proxysql container] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Start backup keepalived container] *************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [loadbalancer : Stop master haproxy container] *****************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Stop master proxysql container] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Stop master keepalived container] **************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Start master haproxy container] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Start master proxysql container] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Start master keepalived container] *************************************************************************************************************************************************************************************************************
skipping: [localhost]

RUNNING HANDLER [loadbalancer : Wait for haproxy to listen on VIP] *************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [loadbalancer : Wait for proxysql to listen on VIP] ************************************************************************************************************************************************************************************************************
skipping: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_collectd_True

PLAY [Apply role collectd] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_influxdb_True

PLAY [Apply role influxdb] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_telegraf_True

PLAY [Apply role telegraf] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

PLAY [Apply role redis] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role mariadb] ******************************************************************************************************************************************************************************************************************************************************

TASK [mariadb : Group MariaDB hosts based on shards] ***************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=localhost)

TASK [mariadb : include_tasks] *************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/mariadb/tasks/deploy.yml for localhost

TASK [mariadb : Ensuring config directories exist] *****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'mariadb', 'value': {'container_name': 'mariadb', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-server:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'mariadb:/var/lib/mysql', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/clustercheck'], 'timeout': '30'}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}, 'haproxy': {'mariadb': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', 'option httpchk'], 'custom_member_list': [' server anas 10.0.2.15:3306 check port 4569 inter 2000 rise 2 fall 5', '']}, 'mariadb_external_lb': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server localhost localhost:3306 check port 4569 inter 2000 rise 2 fall 5', '']}}}})
changed: [localhost] => (item={'key': 'mariadb-clustercheck', 'value': {'container_name': 'mariadb_clustercheck', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-clustercheck:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb-clustercheck/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}}})

TASK [mariadb : Ensuring database backup config directory exists] **************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Copying over my.cnf for mariabackup] ***************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Copying over config.json files for services] *******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'mariadb', 'value': {'container_name': 'mariadb', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-server:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'mariadb:/var/lib/mysql', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/clustercheck'], 'timeout': '30'}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}, 'haproxy': {'mariadb': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', 'option httpchk'], 'custom_member_list': [' server anas 10.0.2.15:3306 check port 4569 inter 2000 rise 2 fall 5', '']}, 'mariadb_external_lb': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server localhost localhost:3306 check port 4569 inter 2000 rise 2 fall 5', '']}}}})
changed: [localhost] => (item={'key': 'mariadb-clustercheck', 'value': {'container_name': 'mariadb_clustercheck', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-clustercheck:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb-clustercheck/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}}})

TASK [mariadb : Copying over config.json files for mariabackup] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Copying over galera.cnf] ***************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [mariadb : Check mariadb containers] **************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'mariadb', 'value': {'container_name': 'mariadb', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-server:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'mariadb:/var/lib/mysql', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/clustercheck'], 'timeout': '30'}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}, 'haproxy': {'mariadb': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', 'option httpchk'], 'custom_member_list': [' server anas 10.0.2.15:3306 check port 4569 inter 2000 rise 2 fall 5', '']}, 'mariadb_external_lb': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server localhost localhost:3306 check port 4569 inter 2000 rise 2 fall 5', '']}}}})
changed: [localhost] => (item={'key': 'mariadb-clustercheck', 'value': {'container_name': 'mariadb_clustercheck', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/mariadb-clustercheck:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/mariadb-clustercheck/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.0.2.15', 'AVAILABLE_WHEN_DONOR': '1'}}})

TASK [mariadb : Create MariaDB volume] *****************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [mariadb : Divide hosts by their MariaDB volume availability] *************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Establish whether the cluster has already existed] *************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Check MariaDB service port liveness] ***************************************************************************************************************************************************************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 10, "msg": "Timeout when waiting for search string MariaDB in 10.0.2.15:3306"}
...ignoring

TASK [mariadb : Divide hosts by their MariaDB service port liveness] ***********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Fail on existing but stopped cluster] **************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Check MariaDB service WSREP sync status] ***********************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Extract MariaDB service WSREP sync status] *********************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Divide hosts by their MariaDB service WSREP sync status] *******************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Fail when MariaDB services are not synced across the whole cluster] ********************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : include_tasks] *************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/mariadb/tasks/bootstrap_cluster.yml for localhost

TASK [mariadb : Running MariaDB bootstrap container] ***************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [mariadb : Store bootstrap host name into facts] **************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Flush handlers] ************************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [mariadb : Starting first MariaDB container] *******************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [mariadb : Wait for first MariaDB service port liveness] *******************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [mariadb : Wait for first MariaDB service to sync WSREP] *******************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [mariadb : Restart MariaDB on existing cluster members] ********************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=0) 
skipping: [localhost] => (item=1) 
skipping: [localhost] => (item=2) 
skipping: [localhost] => (item=3) 

RUNNING HANDLER [mariadb : Start MariaDB on new nodes] *************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=0) 
skipping: [localhost] => (item=1) 
skipping: [localhost] => (item=2) 
skipping: [localhost] => (item=3) 

RUNNING HANDLER [mariadb : Ensure MariaDB is running normally on bootstrap host] ***********************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/mariadb/tasks/restart_services.yml for localhost

RUNNING HANDLER [mariadb : Restart MariaDB container] **************************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [mariadb : Wait for MariaDB service port liveness] *************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [mariadb : Wait for MariaDB service to sync WSREP] *************************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [mariadb : Restart mariadb-clustercheck container] *************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [mariadb : Creating shard root mysql user] ********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Creating mysql monitor user] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [mariadb : Creating the Mariabackup database] *****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Creating database backup user and setting permissions] *********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Granting permissions on Mariabackup database to backup user] ***************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [mariadb : Wait for MariaDB service to be ready through VIP] **************************************************************************************************************************************************************************************************************
FAILED - RETRYING: [localhost]: Wait for MariaDB service to be ready through VIP (6 retries left).
ok: [localhost]

PLAY [Apply role memcached] ****************************************************************************************************************************************************************************************************************************************************

TASK [memcached : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/memcached/tasks/deploy.yml for localhost

TASK [memcached : Ensuring config directories exist] ***************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=memcached)

TASK [memcached : Copying over config.json files for services] *****************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=memcached)

TASK [memcached : Check memcached container] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [memcached : Restart memcached container] **********************************************************************************************************************************************************************************************************************
changed: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_prometheus_True

PLAY [Apply role prometheus] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

PLAY [Apply role iscsi] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_multipathd_True

PLAY [Apply role multipathd] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role rabbitmq] *****************************************************************************************************************************************************************************************************************************************************

TASK [rabbitmq : include_tasks] ************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost

TASK [rabbitmq : include_tasks] ************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/remove-ha-all-policy.yml for localhost

TASK [rabbitmq : Get container facts] ******************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [rabbitmq : List RabbitMQ policies] ***************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Remove ha-all policy from RabbitMQ] ***************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Ensuring config directories exist] ****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'quay.io/openstack.kolla/rabbitmq:zed-ubuntu-jammy', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': '82GebDjawCrUmB48um8ezCc154eJa20qGW1PRGYq', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': '82GebDjawCrUmB48um8ezCc154eJa20qGW1PRGYq', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_rabbitmq'], 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})

TASK [rabbitmq : Copying over config.json files for services] ******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'quay.io/openstack.kolla/rabbitmq:zed-ubuntu-jammy', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': '82GebDjawCrUmB48um8ezCc154eJa20qGW1PRGYq', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': '82GebDjawCrUmB48um8ezCc154eJa20qGW1PRGYq', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_rabbitmq'], 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})

TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)

TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)

TASK [rabbitmq : Copying over erl_inetrc] **************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)

TASK [rabbitmq : Copying over advanced.config] *********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)

TASK [rabbitmq : Copying over definitions.json] ********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)

TASK [rabbitmq : Copying over enabled_plugins] *********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)

TASK [rabbitmq : include_tasks] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Check rabbitmq containers] ************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'quay.io/openstack.kolla/rabbitmq:zed-ubuntu-jammy', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': '82GebDjawCrUmB48um8ezCc154eJa20qGW1PRGYq', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': '82GebDjawCrUmB48um8ezCc154eJa20qGW1PRGYq', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_rabbitmq'], 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})

TASK [rabbitmq : Creating rabbitmq volume] *************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [rabbitmq : Flush handlers] ***********************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost

RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=localhost) 
[WARNING]: Could not match supplied host pattern, ignoring: enable_outward_rabbitmq_True

PLAY [Apply role rabbitmq (outward)] *******************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

PLAY [Apply role etcd] *********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role keystone] *****************************************************************************************************************************************************************************************************************************************************

TASK [keystone : include_tasks] ************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost

TASK [keystone : Ensuring config directories exist] ****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5000'], 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': True, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': True, 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-ssh:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8023'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-fernet:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/fernet-healthcheck.sh'], 'timeout': '30'}}})

TASK [keystone : Check if policies shall be overwritten] ***********************************************************************************************************************************************************************************************************************

TASK [keystone : Set keystone policy file] *************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Check if Keystone domain-specific config is supplied] *********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : include_tasks] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Copying over config.json files for services] ******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5000'], 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': True, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': True, 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-ssh:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8023'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-fernet:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/fernet-healthcheck.sh'], 'timeout': '30'}}})

TASK [keystone : Copying over keystone.conf] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5000'], 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': True, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': True, 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-ssh:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8023'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-fernet:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/fernet-healthcheck.sh'], 'timeout': '30'}}})

TASK [keystone : Copying keystone-startup script for keystone] *****************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : Create Keystone domain-specific config directory] *************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Get file list in custom domains folder] ***********************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Copying Keystone Domain specific settings] ********************************************************************************************************************************************************************************************************************

TASK [keystone : Copying over existing policy file] ****************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5000'], 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': True, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': True, 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-ssh:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8023'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-fernet:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/fernet-healthcheck.sh'], 'timeout': '30'}}}) 

TASK [keystone : include_tasks] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Copying over wsgi-keystone.conf] ******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)

TASK [keystone : Checking whether keystone-paste.ini file exists] **************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Copying over keystone-paste.ini] ******************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Generate the required cron jobs for the node] *****************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Set fact with the generated cron jobs for building the crontab later] *****************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Copying files for keystone-fernet] ****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})

TASK [keystone : Copying files for keystone-ssh] *******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})

TASK [keystone : Check keystone containers] ************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5000'], 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': True, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': True, 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-ssh:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8023'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'quay.io/openstack.kolla/keystone-fernet:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', '/usr/bin/fernet-healthcheck.sh'], 'timeout': '30'}}})

TASK [keystone : include_tasks] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Creating keystone database] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : Creating Keystone database user and setting permissions] ******************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : Checking for any running keystone_fernet containers] **********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Group nodes where keystone_fernet is running] *****************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] **********************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [keystone : Running Keystone bootstrap container] *************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : Running Keystone fernet bootstrap container] ******************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : Flush handlers] ***********************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [keystone : Restart keystone container] ************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : include_tasks] ************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost

TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Run key distribution] *****************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : Creating admin project, user, role, service, and endpoint] ****************************************************************************************************************************************************************************************************
changed: [localhost] => (item=RegionOne)

TASK [service-ks-register : keystone | Creating services] **********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})

TASK [service-ks-register : keystone | Creating endpoints] *********************************************************************************************************************************************************************************************************************
ok: [localhost] => (item={'service': 'keystone', 'url': 'http://10.0.2.250:5000', 'interface': 'internal'})
ok: [localhost] => (item={'service': 'keystone', 'url': 'http://10.0.2.250:5000', 'interface': 'public'})

TASK [service-ks-register : keystone | Creating projects] **********************************************************************************************************************************************************************************************************************

TASK [service-ks-register : keystone | Creating users] *************************************************************************************************************************************************************************************************************************

TASK [service-ks-register : keystone | Creating roles] *************************************************************************************************************************************************************************************************************************

TASK [service-ks-register : keystone | Granting user roles] ********************************************************************************************************************************************************************************************************************

TASK [keystone : Creating default user role] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [keystone : include_tasks] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Apply role opensearch] ***************************************************************************************************************************************************************************************************************************************************

TASK [opensearch : include_tasks] **********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/opensearch/tasks/deploy.yml for localhost

TASK [opensearch : Setting sysctl values] **************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'vm.max_map_count', 'value': 262144})

TASK [opensearch : Ensuring config directories exist] **************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'opensearch', 'value': {'container_name': 'opensearch', 'group': 'opensearch', 'enabled': True, 'image': 'quay.io/openstack.kolla/opensearch:zed-ubuntu-jammy', 'environment': {'OPENSEARCH_JAVA_OPTS': '-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true'}, 'volumes': ['/etc/kolla/opensearch/:/var/lib/kolla/config_files/', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'opensearch:/var/lib/opensearch/data', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9200'], 'timeout': '30'}, 'haproxy': {'opensearch': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9200', 'frontend_http_extra': ['option dontlog-normal']}}}})
changed: [localhost] => (item={'key': 'opensearch-dashboards', 'value': {'container_name': 'opensearch_dashboards', 'group': 'opensearch-dashboards', 'enabled': True, 'environment': {'OPENSEARCH_DASHBOARDS_SECURITY_PLUGIN': 'False'}, 'image': 'quay.io/openstack.kolla/opensearch-dashboards:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/opensearch-dashboards/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5601'], 'timeout': '30'}, 'haproxy': {'opensearch-dashboards': {'enabled': True, 'mode': 'http', 'external': False, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}, 'opensearch_dashboards_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}}}})

TASK [opensearch : include_tasks] **********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [opensearch : Copying over config.json files for services] ****************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'opensearch', 'value': {'container_name': 'opensearch', 'group': 'opensearch', 'enabled': True, 'image': 'quay.io/openstack.kolla/opensearch:zed-ubuntu-jammy', 'environment': {'OPENSEARCH_JAVA_OPTS': '-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true'}, 'volumes': ['/etc/kolla/opensearch/:/var/lib/kolla/config_files/', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'opensearch:/var/lib/opensearch/data', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9200'], 'timeout': '30'}, 'haproxy': {'opensearch': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9200', 'frontend_http_extra': ['option dontlog-normal']}}}})
changed: [localhost] => (item={'key': 'opensearch-dashboards', 'value': {'container_name': 'opensearch_dashboards', 'group': 'opensearch-dashboards', 'enabled': True, 'environment': {'OPENSEARCH_DASHBOARDS_SECURITY_PLUGIN': 'False'}, 'image': 'quay.io/openstack.kolla/opensearch-dashboards:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/opensearch-dashboards/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5601'], 'timeout': '30'}, 'haproxy': {'opensearch-dashboards': {'enabled': True, 'mode': 'http', 'external': False, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}, 'opensearch_dashboards_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}}}})

TASK [opensearch : Copying over opensearch service config file] ****************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [opensearch : Copying over opensearch-dashboards config file] *************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [opensearch : Check opensearch containers] ********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'opensearch', 'value': {'container_name': 'opensearch', 'group': 'opensearch', 'enabled': True, 'image': 'quay.io/openstack.kolla/opensearch:zed-ubuntu-jammy', 'environment': {'OPENSEARCH_JAVA_OPTS': '-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true'}, 'volumes': ['/etc/kolla/opensearch/:/var/lib/kolla/config_files/', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'opensearch:/var/lib/opensearch/data', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9200'], 'timeout': '30'}, 'haproxy': {'opensearch': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9200', 'frontend_http_extra': ['option dontlog-normal']}}}})
changed: [localhost] => (item={'key': 'opensearch-dashboards', 'value': {'container_name': 'opensearch_dashboards', 'group': 'opensearch-dashboards', 'enabled': True, 'environment': {'OPENSEARCH_DASHBOARDS_SECURITY_PLUGIN': 'False'}, 'image': 'quay.io/openstack.kolla/opensearch-dashboards:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/opensearch-dashboards/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:5601'], 'timeout': '30'}, 'haproxy': {'opensearch-dashboards': {'enabled': True, 'mode': 'http', 'external': False, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}, 'opensearch_dashboards_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '5601', 'auth_user': 'opensearch', 'auth_pass': 'LzWnIpMlEJmCAoBRfEgAzjIoUbiCyzk3mslLBI9u'}}}})

TASK [opensearch : include_tasks] **********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [opensearch : Flush handlers] *********************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [opensearch : Restart opensearch container] ********************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [opensearch : Restart opensearch-dashboards container] *********************************************************************************************************************************************************************************************************
changed: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

PLAY [Apply role swift] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_ceph_rgw_True

PLAY [Apply role ceph-rgw] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role glance] *******************************************************************************************************************************************************************************************************************************************************

TASK [glance : include_tasks] **************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/glance/tasks/deploy.yml for localhost

TASK [service-ks-register : glance | Creating services] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'glance', 'service_type': 'image'})

TASK [service-ks-register : glance | Creating endpoints] ***********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'service': 'glance', 'url': 'http://10.0.2.250:9292', 'interface': 'internal'})
changed: [localhost] => (item={'service': 'glance', 'url': 'http://10.0.2.250:9292', 'interface': 'public'})

TASK [service-ks-register : glance | Creating projects] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=service)

TASK [service-ks-register : glance | Creating users] ***************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'glance', 'project': 'service'})
[WARNING]: Module did not set no_log for update_password

TASK [service-ks-register : glance | Creating roles] ***************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=admin)

TASK [service-ks-register : glance | Granting user roles] **********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'glance', 'role': 'admin', 'project': 'service'})

TASK [glance : Ensuring config directories exist] ******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'glance-api', 'value': {'container_name': 'glance_api', 'group': 'glance-api', 'host_in_groups': True, 'enabled': True, 'image': 'quay.io/openstack.kolla/glance-api:zed-ubuntu-jammy', 'environment': {'http_proxy': '', 'https_proxy': '', 'no_proxy': 'localhost,127.0.0.1,10.0.2.15,10.0.2.250'}, 'privileged': False, 'volumes': ['/etc/kolla/glance-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'glance:/var/lib/glance/', '', 'kolla_logs:/var/log/kolla/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9292'], 'timeout': '30'}, 'haproxy': {'glance_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}, 'glance_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}}}})
skipping: [localhost] => (item={'key': 'glance-tls-proxy', 'value': {'container_name': 'glance_tls_proxy', 'group': 'glance-api', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/glance-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9293'], 'timeout': '30'}, 'haproxy': {'glance_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}, 'glance_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}}}}) 

TASK [glance : include_tasks] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Check if policies shall be overwritten] *************************************************************************************************************************************************************************************************************************

TASK [glance : Set glance policy file] *****************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : include_tasks] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Creating TLS backend PEM File] **********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Copying over config.json files for services] ********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'glance-api', 'value': {'container_name': 'glance_api', 'group': 'glance-api', 'host_in_groups': True, 'enabled': True, 'image': 'quay.io/openstack.kolla/glance-api:zed-ubuntu-jammy', 'environment': {'http_proxy': '', 'https_proxy': '', 'no_proxy': 'localhost,127.0.0.1,10.0.2.15,10.0.2.250'}, 'privileged': False, 'volumes': ['/etc/kolla/glance-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'glance:/var/lib/glance/', '', 'kolla_logs:/var/log/kolla/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9292'], 'timeout': '30'}, 'haproxy': {'glance_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}, 'glance_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}}}})
skipping: [localhost] => (item={'key': 'glance-tls-proxy', 'value': {'container_name': 'glance_tls_proxy', 'group': 'glance-api', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/glance-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9293'], 'timeout': '30'}, 'haproxy': {'glance_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}, 'glance_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}}}}) 

TASK [glance : Copying over glance-api.conf] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [glance : Copying over glance-cache.conf for glance_api] ******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Copying over glance-swift.conf for glance_api] ******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Copying over glance-image-import.conf] **************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Copying over property-protections-rules.conf] *******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Copying over existing policy file] ******************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Copying over glance-haproxy-tls.cfg] ****************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/glance/templates/glance-tls-proxy.cfg.j2) 

TASK [glance : Check glance containers] ****************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'glance-api', 'value': {'container_name': 'glance_api', 'group': 'glance-api', 'host_in_groups': True, 'enabled': True, 'image': 'quay.io/openstack.kolla/glance-api:zed-ubuntu-jammy', 'environment': {'http_proxy': '', 'https_proxy': '', 'no_proxy': 'localhost,127.0.0.1,10.0.2.15,10.0.2.250'}, 'privileged': False, 'volumes': ['/etc/kolla/glance-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'glance:/var/lib/glance/', '', 'kolla_logs:/var/log/kolla/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9292'], 'timeout': '30'}, 'haproxy': {'glance_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}, 'glance_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5', '']}}}})
skipping: [localhost] => (item={'key': 'glance-tls-proxy', 'value': {'container_name': 'glance_tls_proxy', 'group': 'glance-api', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/glance-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9293'], 'timeout': '30'}, 'haproxy': {'glance_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}, 'glance_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9292', 'frontend_http_extra': ['timeout client 6h'], 'backend_http_extra': ['timeout server 6h'], 'custom_member_list': ['server anas 10.0.2.15:9292 check inter 2000 rise 2 fall 5 ssl verify required ca-file ca-certificates.crt', ''], 'tls_backend': 'yes'}}}}) 

TASK [glance : include_tasks] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [glance : Creating Glance database] ***************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [glance : Creating Glance database user and setting permissions] **********************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [glance : Enable log_bin_trust_function_creators function] ****************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [glance : Running Glance bootstrap container] *****************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [glance : Disable log_bin_trust_function_creators function] ***************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [glance : Flush handlers] *************************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [glance : Restart glance-api container] ************************************************************************************************************************************************************************************************************************
changed: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_ironic_True

PLAY [Apply role ironic] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

PLAY [Apply role cinder] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role placement] ****************************************************************************************************************************************************************************************************************************************************

TASK [placement : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/placement/tasks/deploy.yml for localhost

TASK [service-ks-register : placement | Creating services] *********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'placement', 'service_type': 'placement'})

TASK [service-ks-register : placement | Creating endpoints] ********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'service': 'placement', 'url': 'http://10.0.2.250:8780', 'interface': 'internal'})
changed: [localhost] => (item={'service': 'placement', 'url': 'http://10.0.2.250:8780', 'interface': 'public'})

TASK [service-ks-register : placement | Creating projects] *********************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=service)

TASK [service-ks-register : placement | Creating users] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'placement', 'project': 'service'})

TASK [service-ks-register : placement | Creating roles] ************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=admin)

TASK [service-ks-register : placement | Granting user roles] *******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'placement', 'role': 'admin', 'project': 'service'})

TASK [placement : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [placement : Ensuring config directories exist] ***************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'placement-api', 'value': {'container_name': 'placement_api', 'group': 'placement-api', 'image': 'quay.io/openstack.kolla/placement-api:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/placement-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8780'], 'timeout': '30'}, 'haproxy': {'placement_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}, 'placement_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}}})

TASK [placement : Check if policies shall be overwritten] **********************************************************************************************************************************************************************************************************************

TASK [placement : Set placement policy file] ***********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [placement : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [placement : Copying over config.json files for services] *****************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'placement-api', 'value': {'container_name': 'placement_api', 'group': 'placement-api', 'image': 'quay.io/openstack.kolla/placement-api:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/placement-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8780'], 'timeout': '30'}, 'haproxy': {'placement_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}, 'placement_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}}})

TASK [placement : Copying over placement.conf] *********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'placement-api', 'value': {'container_name': 'placement_api', 'group': 'placement-api', 'image': 'quay.io/openstack.kolla/placement-api:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/placement-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8780'], 'timeout': '30'}, 'haproxy': {'placement_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}, 'placement_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}}})

TASK [placement : Copying over placement-api wsgi configuration] ***************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/placement/templates/placement-api-wsgi.conf.j2)

TASK [placement : Copying over migrate-db.rc.j2 configuration] *****************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [placement : Copying over existing policy file] ***************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'placement-api', 'value': {'container_name': 'placement_api', 'group': 'placement-api', 'image': 'quay.io/openstack.kolla/placement-api:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/placement-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8780'], 'timeout': '30'}, 'haproxy': {'placement_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}, 'placement_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}}}) 

TASK [placement : Check placement containers] **********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'placement-api', 'value': {'container_name': 'placement_api', 'group': 'placement-api', 'image': 'quay.io/openstack.kolla/placement-api:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/placement-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8780'], 'timeout': '30'}, 'haproxy': {'placement_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}, 'placement_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8780', 'listen_port': '8780', 'tls_backend': 'no'}}}})

TASK [placement : Creating placement databases] ********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [placement : Creating placement databases user and setting permissions] ***************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [placement : Running placement bootstrap container] ***********************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [placement : Flush handlers] **********************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [placement : Restart placement-api container] ******************************************************************************************************************************************************************************************************************
changed: [localhost]

PLAY [Bootstrap nova API databases] ********************************************************************************************************************************************************************************************************************************************

TASK [Bootstrap deploy] ********************************************************************************************************************************************************************************************************************************************************

TASK [nova : Creating Nova databases] ******************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=nova_cell0)
changed: [localhost] => (item=nova_api)

TASK [nova : Creating Nova databases user and setting permissions] *************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=None)
changed: [localhost] => (item=None)
changed: [localhost]

TASK [nova : Ensuring config directories exist] ********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova : Copying over config.json files for nova-api-bootstrap] ************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova : Copying over nova.conf for nova-api-bootstrap] ********************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova : Running Nova API bootstrap container] *****************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova : Create cell0 mappings] ********************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova/tasks/bootstrap_service.yml for localhost

TASK [nova : Running Nova API bootstrap container] *****************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Bootstrap upgrade] *******************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Bootstrap nova cell databases] *******************************************************************************************************************************************************************************************************************************************

TASK [Bootstrap deploy] ********************************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : Creating Nova cell database] *********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova-cell : Creating Nova cell database user and setting permissions] ****************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [service-rabbitmq : nova | Ensure RabbitMQ vhosts exist] ******************************************************************************************************************************************************************************************************************

TASK [service-rabbitmq : nova | Ensure RabbitMQ users exist] *******************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=None)
ok: [localhost -> {{ service_rabbitmq_delegate_host }}]

TASK [service-rabbitmq : nova | Ensure RabbitMQ vhosts exist] ******************************************************************************************************************************************************************************************************************

TASK [service-rabbitmq : nova | Ensure RabbitMQ users exist] *******************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=None) 
skipping: [localhost]

TASK [nova-cell : Ensuring config directories exist] ***************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova-cell : Copying over config.json files for nova-cell-bootstrap] ******************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova-cell : Copying over nova.conf for nova-cell-bootstrap] **************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova-cell : Running Nova cell bootstrap container] ***********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Get a list of existing cells] ********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Extract current cell settings from list] *********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Create cell] *************************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova-cell : Update cell] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [Bootstrap upgrade] *******************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Apply role nova] *********************************************************************************************************************************************************************************************************************************************************

TASK [nova : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova/tasks/deploy.yml for localhost

TASK [service-ks-register : nova | Creating services] **************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'name': 'nova_legacy', 'service_type': 'compute_legacy'}) 
changed: [localhost] => (item={'name': 'nova', 'service_type': 'compute'})

TASK [service-ks-register : nova | Creating endpoints] *************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'service': 'nova_legacy', 'url': 'http://10.0.2.250:8774/v2/%(tenant_id)s', 'interface': 'internal'}) 
skipping: [localhost] => (item={'service': 'nova_legacy', 'url': 'http://10.0.2.250:8774/v2/%(tenant_id)s', 'interface': 'public'}) 
changed: [localhost] => (item={'service': 'nova', 'url': 'http://10.0.2.250:8774/v2.1', 'interface': 'internal'})
changed: [localhost] => (item={'service': 'nova', 'url': 'http://10.0.2.250:8774/v2.1', 'interface': 'public'})

TASK [service-ks-register : nova | Creating projects] **************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=service)

TASK [service-ks-register : nova | Creating users] *****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'nova', 'project': 'service'})

TASK [service-ks-register : nova | Creating roles] *****************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=admin)

TASK [service-ks-register : nova | Granting user roles] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'nova', 'role': 'admin', 'project': 'service'})

TASK [nova : Ensuring config directories exist] ********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-api', 'value': {'container_name': 'nova_api', 'group': 'nova-api', 'image': 'quay.io/openstack.kolla/nova-api:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'volumes': ['/etc/kolla/nova-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8774 '], 'timeout': '30'}, 'haproxy': {'nova_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_metadata': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}, 'nova_metadata_external': {'enabled': 'no', 'mode': 'http', 'external': True, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'nova-scheduler', 'value': {'container_name': 'nova_scheduler', 'group': 'nova-scheduler', 'image': 'quay.io/openstack.kolla/nova-scheduler:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-scheduler/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-scheduler 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-super-conductor', 'value': {'container_name': 'nova_super_conductor', 'group': 'nova-super-conductor', 'enabled': 'no', 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-super-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}}) 

TASK [nova : Check if policies shall be overwritten] ***************************************************************************************************************************************************************************************************************************

TASK [nova : Set nova policy file] *********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova : Check for vendordata file] ****************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova : Set vendordata file path] *****************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova : Copying over config.json files for services] **********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-api', 'value': {'container_name': 'nova_api', 'group': 'nova-api', 'image': 'quay.io/openstack.kolla/nova-api:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'volumes': ['/etc/kolla/nova-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8774 '], 'timeout': '30'}, 'haproxy': {'nova_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_metadata': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}, 'nova_metadata_external': {'enabled': 'no', 'mode': 'http', 'external': True, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'nova-scheduler', 'value': {'container_name': 'nova_scheduler', 'group': 'nova-scheduler', 'image': 'quay.io/openstack.kolla/nova-scheduler:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-scheduler/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-scheduler 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-super-conductor', 'value': {'container_name': 'nova_super_conductor', 'group': 'nova-super-conductor', 'enabled': 'no', 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-super-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}}) 

TASK [nova : Copying over nova.conf] *******************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-api', 'value': {'container_name': 'nova_api', 'group': 'nova-api', 'image': 'quay.io/openstack.kolla/nova-api:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'volumes': ['/etc/kolla/nova-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8774 '], 'timeout': '30'}, 'haproxy': {'nova_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_metadata': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}, 'nova_metadata_external': {'enabled': 'no', 'mode': 'http', 'external': True, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'nova-scheduler', 'value': {'container_name': 'nova_scheduler', 'group': 'nova-scheduler', 'image': 'quay.io/openstack.kolla/nova-scheduler:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-scheduler/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-scheduler 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-super-conductor', 'value': {'container_name': 'nova_super_conductor', 'group': 'nova-super-conductor', 'enabled': 'no', 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-super-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}}) 

TASK [nova : Copying over existing policy file] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'nova-api', 'value': {'container_name': 'nova_api', 'group': 'nova-api', 'image': 'quay.io/openstack.kolla/nova-api:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'volumes': ['/etc/kolla/nova-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8774 '], 'timeout': '30'}, 'haproxy': {'nova_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_metadata': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}, 'nova_metadata_external': {'enabled': 'no', 'mode': 'http', 'external': True, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}}}) 
skipping: [localhost] => (item={'key': 'nova-scheduler', 'value': {'container_name': 'nova_scheduler', 'group': 'nova-scheduler', 'image': 'quay.io/openstack.kolla/nova-scheduler:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-scheduler/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-scheduler 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-super-conductor', 'value': {'container_name': 'nova_super_conductor', 'group': 'nova-super-conductor', 'enabled': 'no', 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-super-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}}) 

TASK [nova : Copying over nova-api-wsgi.conf] **********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova : Copying over vendordata file] *************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova : Check nova containers] ********************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-api', 'value': {'container_name': 'nova_api', 'group': 'nova-api', 'image': 'quay.io/openstack.kolla/nova-api:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'volumes': ['/etc/kolla/nova-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8774 '], 'timeout': '30'}, 'haproxy': {'nova_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8774', 'listen_port': '8774', 'tls_backend': 'no'}, 'nova_metadata': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}, 'nova_metadata_external': {'enabled': 'no', 'mode': 'http', 'external': True, 'port': '8775', 'listen_port': '8775', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'nova-scheduler', 'value': {'container_name': 'nova_scheduler', 'group': 'nova-scheduler', 'image': 'quay.io/openstack.kolla/nova-scheduler:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-scheduler/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-scheduler 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-super-conductor', 'value': {'container_name': 'nova_super_conductor', 'group': 'nova-super-conductor', 'enabled': 'no', 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-super-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}}) 

TASK [nova : Flush handlers] ***************************************************************************************************************************************************************************************************************************************************
[WARNING]: flush_handlers task does not support when conditional

RUNNING HANDLER [nova : Restart nova-scheduler container] **********************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova : Restart nova-api container] ****************************************************************************************************************************************************************************************************************************
changed: [localhost]

PLAY [Apply role nova-cell] ****************************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova-cell/tasks/deploy.yml for localhost

TASK [nova-cell : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [Load and persist br_netfilter module] ************************************************************************************************************************************************************************************************************************************

TASK [module-load : Load modules] **********************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=br_netfilter)

TASK [module-load : Persist modules via modules-load.d] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=br_netfilter)

TASK [module-load : Drop module persistence] ***********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=br_netfilter) 

TASK [nova-cell : Enable bridge-nf-call sysctl variables] **********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=net.bridge.bridge-nf-call-iptables)
changed: [localhost] => (item=net.bridge.bridge-nf-call-ip6tables)

TASK [nova-cell : Install udev kolla kvm rules] ********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova-cell : Mask qemu-kvm service] ***************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [nova-cell : Ensuring config directories exist] ***************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-libvirt', 'value': {'container_name': 'nova_libvirt', 'group': 'compute', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-libvirt:zed-ubuntu-jammy', 'pid_mode': 'host', 'cgroupns_mode': 'host', 'privileged': True, 'volumes': ['/etc/kolla/nova-libvirt/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/:/run/:shared', '/dev:/dev', '/sys/fs/cgroup:/sys/fs/cgroup', 'kolla_logs:/var/log/kolla/', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', 'nova_libvirt_qemu:/etc/libvirt/qemu', 'nova_libvirt_secrets:/etc/libvirt/secrets', ''], 'dimensions': {'ulimits': {'memlock': {'soft': 67108864, 'hard': 67108864}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'virsh version --daemon'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-ssh', 'value': {'container_name': 'nova_ssh', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-ssh:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla', 'nova_compute:/var/lib/nova', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8022'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-novncproxy', 'value': {'container_name': 'nova_novncproxy', 'group': 'nova-novncproxy', 'image': 'quay.io/openstack.kolla/nova-novncproxy:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-novncproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6080/vnc_lite.html'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-spicehtml5proxy', 'value': {'container_name': 'nova_spicehtml5proxy', 'group': 'nova-spicehtml5proxy', 'image': 'quay.io/openstack.kolla/nova-spicehtml5proxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-spicehtml5proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6082/spice_auto.html'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-serialproxy', 'value': {'container_name': 'nova_serialproxy', 'group': 'nova-serialproxy', 'image': 'quay.io/openstack.kolla/nova-serialproxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-serialproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'nova-conductor', 'value': {'container_name': 'nova_conductor', 'group': 'nova-conductor', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-compute', 'value': {'container_name': 'nova_compute', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-compute:zed-ubuntu-jammy', 'environment': {'LIBGUESTFS_BACKEND': 'direct'}, 'privileged': True, 'enabled': True, 'ipc_mode': 'host', 'volumes': ['/etc/kolla/nova-compute/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run:/run:shared', '/dev:/dev', 'kolla_logs:/var/log/kolla/', '', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-compute-ironic', 'value': {'container_name': 'nova_compute_ironic', 'group': 'nova-compute-ironic', 'image': 'quay.io/openstack.kolla/nova-compute-ironic:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-compute-ironic/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}}) 

TASK [nova-cell : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Check if policies shall be overwritten] **********************************************************************************************************************************************************************************************************************

TASK [nova-cell : Set nova policy file] ****************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Copying over config.json files for services] *****************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-libvirt', 'value': {'container_name': 'nova_libvirt', 'group': 'compute', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-libvirt:zed-ubuntu-jammy', 'pid_mode': 'host', 'cgroupns_mode': 'host', 'privileged': True, 'volumes': ['/etc/kolla/nova-libvirt/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/:/run/:shared', '/dev:/dev', '/sys/fs/cgroup:/sys/fs/cgroup', 'kolla_logs:/var/log/kolla/', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', 'nova_libvirt_qemu:/etc/libvirt/qemu', 'nova_libvirt_secrets:/etc/libvirt/secrets', ''], 'dimensions': {'ulimits': {'memlock': {'soft': 67108864, 'hard': 67108864}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'virsh version --daemon'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-ssh', 'value': {'container_name': 'nova_ssh', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-ssh:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla', 'nova_compute:/var/lib/nova', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8022'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-novncproxy', 'value': {'container_name': 'nova_novncproxy', 'group': 'nova-novncproxy', 'image': 'quay.io/openstack.kolla/nova-novncproxy:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-novncproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6080/vnc_lite.html'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-spicehtml5proxy', 'value': {'container_name': 'nova_spicehtml5proxy', 'group': 'nova-spicehtml5proxy', 'image': 'quay.io/openstack.kolla/nova-spicehtml5proxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-spicehtml5proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6082/spice_auto.html'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-serialproxy', 'value': {'container_name': 'nova_serialproxy', 'group': 'nova-serialproxy', 'image': 'quay.io/openstack.kolla/nova-serialproxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-serialproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'nova-conductor', 'value': {'container_name': 'nova_conductor', 'group': 'nova-conductor', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-compute', 'value': {'container_name': 'nova_compute', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-compute:zed-ubuntu-jammy', 'environment': {'LIBGUESTFS_BACKEND': 'direct'}, 'privileged': True, 'enabled': True, 'ipc_mode': 'host', 'volumes': ['/etc/kolla/nova-compute/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run:/run:shared', '/dev:/dev', 'kolla_logs:/var/log/kolla/', '', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-compute-ironic', 'value': {'container_name': 'nova_compute_ironic', 'group': 'nova-compute-ironic', 'image': 'quay.io/openstack.kolla/nova-compute-ironic:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-compute-ironic/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}}) 

TASK [nova-cell : Copying over nova.conf] **************************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'nova-libvirt', 'value': {'container_name': 'nova_libvirt', 'group': 'compute', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-libvirt:zed-ubuntu-jammy', 'pid_mode': 'host', 'cgroupns_mode': 'host', 'privileged': True, 'volumes': ['/etc/kolla/nova-libvirt/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/:/run/:shared', '/dev:/dev', '/sys/fs/cgroup:/sys/fs/cgroup', 'kolla_logs:/var/log/kolla/', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', 'nova_libvirt_qemu:/etc/libvirt/qemu', 'nova_libvirt_secrets:/etc/libvirt/secrets', ''], 'dimensions': {'ulimits': {'memlock': {'soft': 67108864, 'hard': 67108864}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'virsh version --daemon'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-ssh', 'value': {'container_name': 'nova_ssh', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-ssh:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla', 'nova_compute:/var/lib/nova', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8022'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'nova-novncproxy', 'value': {'container_name': 'nova_novncproxy', 'group': 'nova-novncproxy', 'image': 'quay.io/openstack.kolla/nova-novncproxy:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-novncproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6080/vnc_lite.html'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-spicehtml5proxy', 'value': {'container_name': 'nova_spicehtml5proxy', 'group': 'nova-spicehtml5proxy', 'image': 'quay.io/openstack.kolla/nova-spicehtml5proxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-spicehtml5proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6082/spice_auto.html'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-serialproxy', 'value': {'container_name': 'nova_serialproxy', 'group': 'nova-serialproxy', 'image': 'quay.io/openstack.kolla/nova-serialproxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-serialproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'nova-conductor', 'value': {'container_name': 'nova_conductor', 'group': 'nova-conductor', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-compute', 'value': {'container_name': 'nova_compute', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-compute:zed-ubuntu-jammy', 'environment': {'LIBGUESTFS_BACKEND': 'direct'}, 'privileged': True, 'enabled': True, 'ipc_mode': 'host', 'volumes': ['/etc/kolla/nova-compute/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run:/run:shared', '/dev:/dev', 'kolla_logs:/var/log/kolla/', '', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-compute-ironic', 'value': {'container_name': 'nova_compute_ironic', 'group': 'nova-compute-ironic', 'image': 'quay.io/openstack.kolla/nova-compute-ironic:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-compute-ironic/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}}) 

TASK [nova-cell : Copying over Nova compute provider config] *******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Copying over libvirt configuration] **************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'src': 'qemu.conf.j2', 'dest': 'qemu.conf'})
changed: [localhost] => (item={'src': 'libvirtd.conf.j2', 'dest': 'libvirtd.conf'})

TASK [nova-cell : Copying over libvirt TLS keys] *******************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Copying over libvirt SASL configuration] *********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'src': 'auth.conf.j2', 'dest': 'auth.conf', 'service': 'nova-compute'})
changed: [localhost] => (item={'src': 'auth.conf.j2', 'dest': 'auth.conf', 'service': 'nova-libvirt'})
changed: [localhost] => (item={'src': 'sasl.conf.j2', 'dest': 'sasl.conf', 'service': 'nova-libvirt'})

TASK [nova-cell : Copying files for nova-ssh] **********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})

TASK [nova-cell : Copying VMware vCenter CA file] ******************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Copying 'release' file for nova_compute] *********************************************************************************************************************************************************************************************************************

TASK [nova-cell : Copying over existing policy file] ***************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'nova-libvirt', 'value': {'container_name': 'nova_libvirt', 'group': 'compute', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-libvirt:zed-ubuntu-jammy', 'pid_mode': 'host', 'cgroupns_mode': 'host', 'privileged': True, 'volumes': ['/etc/kolla/nova-libvirt/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/:/run/:shared', '/dev:/dev', '/sys/fs/cgroup:/sys/fs/cgroup', 'kolla_logs:/var/log/kolla/', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', 'nova_libvirt_qemu:/etc/libvirt/qemu', 'nova_libvirt_secrets:/etc/libvirt/secrets', ''], 'dimensions': {'ulimits': {'memlock': {'soft': 67108864, 'hard': 67108864}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'virsh version --daemon'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-ssh', 'value': {'container_name': 'nova_ssh', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-ssh:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla', 'nova_compute:/var/lib/nova', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8022'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-novncproxy', 'value': {'container_name': 'nova_novncproxy', 'group': 'nova-novncproxy', 'image': 'quay.io/openstack.kolla/nova-novncproxy:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-novncproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6080/vnc_lite.html'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-spicehtml5proxy', 'value': {'container_name': 'nova_spicehtml5proxy', 'group': 'nova-spicehtml5proxy', 'image': 'quay.io/openstack.kolla/nova-spicehtml5proxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-spicehtml5proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6082/spice_auto.html'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-serialproxy', 'value': {'container_name': 'nova_serialproxy', 'group': 'nova-serialproxy', 'image': 'quay.io/openstack.kolla/nova-serialproxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-serialproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'nova-conductor', 'value': {'container_name': 'nova_conductor', 'group': 'nova-conductor', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-compute', 'value': {'container_name': 'nova_compute', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-compute:zed-ubuntu-jammy', 'environment': {'LIBGUESTFS_BACKEND': 'direct'}, 'privileged': True, 'enabled': True, 'ipc_mode': 'host', 'volumes': ['/etc/kolla/nova-compute/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run:/run:shared', '/dev:/dev', 'kolla_logs:/var/log/kolla/', '', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-compute-ironic', 'value': {'container_name': 'nova_compute_ironic', 'group': 'nova-compute-ironic', 'image': 'quay.io/openstack.kolla/nova-compute-ironic:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-compute-ironic/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}}) 

TASK [nova-cell : Check nova-cell containers] **********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'nova-libvirt', 'value': {'container_name': 'nova_libvirt', 'group': 'compute', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-libvirt:zed-ubuntu-jammy', 'pid_mode': 'host', 'cgroupns_mode': 'host', 'privileged': True, 'volumes': ['/etc/kolla/nova-libvirt/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/:/run/:shared', '/dev:/dev', '/sys/fs/cgroup:/sys/fs/cgroup', 'kolla_logs:/var/log/kolla/', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', 'nova_libvirt_qemu:/etc/libvirt/qemu', 'nova_libvirt_secrets:/etc/libvirt/secrets', ''], 'dimensions': {'ulimits': {'memlock': {'soft': 67108864, 'hard': 67108864}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'virsh version --daemon'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-ssh', 'value': {'container_name': 'nova_ssh', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-ssh:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla', 'nova_compute:/var/lib/nova', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_listen sshd 8022'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-novncproxy', 'value': {'container_name': 'nova_novncproxy', 'group': 'nova-novncproxy', 'image': 'quay.io/openstack.kolla/nova-novncproxy:zed-ubuntu-jammy', 'enabled': True, 'volumes': ['/etc/kolla/nova-novncproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6080/vnc_lite.html'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-spicehtml5proxy', 'value': {'container_name': 'nova_spicehtml5proxy', 'group': 'nova-spicehtml5proxy', 'image': 'quay.io/openstack.kolla/nova-spicehtml5proxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-spicehtml5proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:6082/spice_auto.html'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'nova-serialproxy', 'value': {'container_name': 'nova_serialproxy', 'group': 'nova-serialproxy', 'image': 'quay.io/openstack.kolla/nova-serialproxy:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-serialproxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'nova-conductor', 'value': {'container_name': 'nova_conductor', 'group': 'nova-conductor', 'enabled': True, 'image': 'quay.io/openstack.kolla/nova-conductor:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/nova-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-conductor 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'nova-compute', 'value': {'container_name': 'nova_compute', 'group': 'compute', 'image': 'quay.io/openstack.kolla/nova-compute:zed-ubuntu-jammy', 'environment': {'LIBGUESTFS_BACKEND': 'direct'}, 'privileged': True, 'enabled': True, 'ipc_mode': 'host', 'volumes': ['/etc/kolla/nova-compute/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run:/run:shared', '/dev:/dev', 'kolla_logs:/var/log/kolla/', '', 'libvirtd:/var/lib/libvirt', 'nova_compute:/var/lib/nova/', '', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'nova-compute-ironic', 'value': {'container_name': 'nova_compute_ironic', 'group': 'nova-compute-ironic', 'image': 'quay.io/openstack.kolla/nova-compute-ironic:zed-ubuntu-jammy', 'enabled': False, 'volumes': ['/etc/kolla/nova-compute-ironic/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port nova-compute 5672'], 'timeout': '30'}}}) 

TASK [nova-cell : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Flush handlers] **********************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [nova-cell : Restart nova-conductor container] *****************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova-cell : Restart nova-novncproxy container] ****************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova-cell : Restart nova-ssh container] ***********************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova-cell : Restart nova-libvirt container] *******************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova-cell : Checking libvirt container is ready] **************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova-cell : Create libvirt SASL user] *************************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova-cell : Restart nova-compute container] *******************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [nova-cell : Wait for nova-compute services to update service versions] ****************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Waiting for nova-compute services to register themselves] ****************************************************************************************************************************************************************************************************
FAILED - RETRYING: [localhost]: Waiting for nova-compute services to register themselves (20 retries left).
ok: [localhost]

TASK [nova-cell : Fail if nova-compute service failed to register] *************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Include discover_computes.yml] *******************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova-cell/tasks/discover_computes.yml for localhost

TASK [nova-cell : Get a list of existing cells] ********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Extract current cell settings from list] *********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Fail if cell settings not found] *****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Discover nova hosts] *****************************************************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY [Refresh nova scheduler cell cache] ***************************************************************************************************************************************************************************************************************************************

TASK [nova : Refresh cell cache in nova scheduler] *****************************************************************************************************************************************************************************************************************************
changed: [localhost]

PLAY [Reload global Nova super conductor services] *****************************************************************************************************************************************************************************************************************************

TASK [nova : Reload nova super conductor services to remove RPC version pin] ***************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Reload Nova cell services] ***********************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : Reload nova cell services to remove RPC version cap] *********************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=nova-conductor) 
skipping: [localhost] => (item=nova-compute) 
skipping: [localhost] => (item=nova-compute-ironic) 
skipping: [localhost] => (item=nova-novncproxy) 
skipping: [localhost] => (item=nova-serialproxy) 
skipping: [localhost] => (item=nova-spicehtml5proxy) 

PLAY [Reload global Nova API services] *****************************************************************************************************************************************************************************************************************************************

TASK [nova : Reload nova API services to remove RPC version pin] ***************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=nova-scheduler) 
skipping: [localhost] => (item=nova-api) 

PLAY [Run Nova API online data migrations] *************************************************************************************************************************************************************************************************************************************

TASK [nova : Run Nova API online database migrations] **************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Run Nova cell online data migrations] ************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : Run Nova cell online database migrations] ********************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Apply role openvswitch] **************************************************************************************************************************************************************************************************************************************************

TASK [openvswitch : include_tasks] *********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost

TASK [module-load : Load modules] **********************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=openvswitch)

TASK [module-load : Persist modules via modules-load.d] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=openvswitch)

TASK [module-load : Drop module persistence] ***********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=openvswitch) 

TASK [openvswitch : Ensuring config directories exist] *************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'quay.io/openstack.kolla/openvswitch-db-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'ovsdb-client list-dbs'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'quay.io/openstack.kolla/openvswitch-vswitchd:zed-ubuntu-jammy', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'ovs-appctl version'], 'timeout': '30'}}})

TASK [openvswitch : Copying over config.json files for services] ***************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'quay.io/openstack.kolla/openvswitch-db-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'ovsdb-client list-dbs'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'quay.io/openstack.kolla/openvswitch-vswitchd:zed-ubuntu-jammy', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'ovs-appctl version'], 'timeout': '30'}}})

TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] *******************************************************************************************************************************************************************************************
changed: [localhost]

TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [openvswitch : Check openvswitch containers] ******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'quay.io/openstack.kolla/openvswitch-db-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'ovsdb-client list-dbs'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'quay.io/openstack.kolla/openvswitch-vswitchd:zed-ubuntu-jammy', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'ovs-appctl version'], 'timeout': '30'}}})

TASK [openvswitch : Flush Handlers] ********************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [openvswitch : Waiting for openvswitch_db service to be ready] *************************************************************************************************************************************************************************************************
ok: [localhost]

RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [openvswitch : Set system-id and hw-offload] ******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'col': 'external_ids', 'name': 'system-id', 'value': 'anas'})
ok: [localhost] => (item={'col': 'other_config', 'name': 'hw-offload', 'value': True, 'state': 'absent'})

TASK [openvswitch : Ensuring OVS bridge is properly setup] *********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=['br-ex', 'enp0s8'])
[WARNING]: Could not match supplied host pattern, ignoring: enable_openvswitch_True_enable_ovs_dpdk_True

PLAY [Apply role ovs-dpdk] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_ovn_True

PLAY [Apply role ovn-controller] ***********************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role ovn-db] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role neutron] ******************************************************************************************************************************************************************************************************************************************************

TASK [neutron : include_tasks] *************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/neutron/tasks/deploy.yml for localhost

TASK [service-ks-register : neutron | Creating services] ***********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'neutron', 'service_type': 'network'})

TASK [service-ks-register : neutron | Creating endpoints] **********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'service': 'neutron', 'url': 'http://10.0.2.250:9696', 'interface': 'internal'})
changed: [localhost] => (item={'service': 'neutron', 'url': 'http://10.0.2.250:9696', 'interface': 'public'})

TASK [service-ks-register : neutron | Creating projects] ***********************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=service)

TASK [service-ks-register : neutron | Creating users] **************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'neutron', 'project': 'service'})

TASK [service-ks-register : neutron | Creating roles] **************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=admin)

TASK [service-ks-register : neutron | Granting user roles] *********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'neutron', 'role': 'admin', 'project': 'service'})

TASK [neutron : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [Load and persist ip6_tables module] **************************************************************************************************************************************************************************************************************************************

TASK [module-load : Load modules] **********************************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=ip6_tables)

TASK [module-load : Persist modules via modules-load.d] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=ip6_tables)

TASK [module-load : Drop module persistence] ***********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=ip6_tables) 

TASK [neutron : Setting sysctl values] *****************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'net.ipv4.neigh.default.gc_thresh1', 'value': 128})
changed: [localhost] => (item={'name': 'net.ipv4.neigh.default.gc_thresh2', 'value': 28672})
changed: [localhost] => (item={'name': 'net.ipv4.neigh.default.gc_thresh3', 'value': 32768})
changed: [localhost] => (item={'name': 'net.ipv6.neigh.default.gc_thresh1', 'value': '128'})
changed: [localhost] => (item={'name': 'net.ipv6.neigh.default.gc_thresh2', 'value': '28672'})
changed: [localhost] => (item={'name': 'net.ipv6.neigh.default.gc_thresh3', 'value': '32768'})

TASK [neutron : Ensuring config directories exist] *****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}})
changed: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : Check if extra ml2 plugins exists] *****************************************************************************************************************************************************************************************************************************
[WARNING]: Skipped '/etc/kolla/config/neutron/plugins/' path due to this access issue: '/etc/kolla/config/neutron/plugins/' is not a directory
ok: [localhost]

TASK [neutron : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Creating TLS backend PEM File] *********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Check if policies shall be overwritten] ************************************************************************************************************************************************************************************************************************

TASK [neutron : Set neutron policy file] ***************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over existing policy file] *****************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}}) 
skipping: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : Copying over config.json files for services] *******************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}})
changed: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : Copying over neutron.conf] *************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}})
changed: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : Copying over neutron_vpnaas.conf] ******************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}})
skipping: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : Copying over ssh key] ******************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Copying over ml2_conf.ini] *************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}})
skipping: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : Copying over linuxbridge_agent.ini] ****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over openvswitch_agent.ini] ****************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Copying over sriov_agent.ini] **********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over mlnx_agent.ini] ***********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over eswitchd.conf] ************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over dhcp_agent.ini] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Copying over dnsmasq.conf] *************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/neutron/templates/dnsmasq.conf.j2)

TASK [neutron : Copying over l3_agent.ini] *************************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}}) 
skipping: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : Copying over metadata_agent.ini] *******************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Copying over neutron_ovn_metadata_agent.ini] *******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over metering_agent.ini] *******************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over ironic_neutron_agent.ini] *************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over bgp_dragent.ini] **********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copying over nsx.ini] ******************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Copy neutron-l3-agent-wrapper script] **************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Copying over extra ml2 plugins] ********************************************************************************************************************************************************************************************************************************

TASK [neutron : Copying over neutron-tls-proxy.cfg] ****************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/neutron/templates/neutron-tls-proxy.cfg.j2) 

TASK [neutron : Check neutron containers] **************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'neutron-server', 'value': {'container_name': 'neutron_server', 'image': 'quay.io/openstack.kolla/neutron-server:zed-ubuntu-jammy', 'enabled': True, 'group': 'neutron-server', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:9696'], 'timeout': '30'}, 'haproxy': {'neutron_server': {'enabled': True, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696'}, 'neutron_server_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696'}}}})
changed: [localhost] => (item={'key': 'neutron-openvswitch-agent', 'value': {'container_name': 'neutron_openvswitch_agent', 'image': 'quay.io/openstack.kolla/neutron-openvswitch-agent:zed-ubuntu-jammy', 'enabled': True, 'privileged': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-openvswitch-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-openvswitch-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-linuxbridge-agent', 'value': {'container_name': 'neutron_linuxbridge_agent', 'image': 'quay.io/openstack.kolla/neutron-linuxbridge-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-linuxbridge-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-linuxbridge-agent 5672'], 'timeout': '30'}}}) 
changed: [localhost] => (item={'key': 'neutron-dhcp-agent', 'value': {'container_name': 'neutron_dhcp_agent', 'image': 'quay.io/openstack.kolla/neutron-dhcp-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'group': 'neutron-dhcp-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-dhcp-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-dhcp-agent 5672'], 'timeout': '30'}}})
changed: [localhost] => (item={'key': 'neutron-l3-agent', 'value': {'container_name': 'neutron_l3_agent', 'image': 'quay.io/openstack.kolla/neutron-l3-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'environment': {'KOLLA_LEGACY_IPTABLES': 'false'}, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-l3-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '/lib/modules:/lib/modules:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', "healthcheck_port 'neutron-l3-agent ' 5672"], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-sriov-agent', 'value': {'container_name': 'neutron_sriov_agent', 'image': 'quay.io/openstack.kolla/neutron-sriov-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-sriov-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-sriov-nic-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-mlnx-agent', 'value': {'container_name': 'neutron_mlnx_agent', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-mlnx-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-eswitchd', 'value': {'container_name': 'neutron_eswitchd', 'image': 'quay.io/openstack.kolla/neutron-mlnx-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-eswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/run/libvirt:/run/libvirt:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
changed: [localhost] => (item={'key': 'neutron-metadata-agent', 'value': {'container_name': 'neutron_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': True, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-metadata-agent 5672'], 'timeout': '30'}}})
skipping: [localhost] => (item={'key': 'neutron-ovn-metadata-agent', 'value': {'container_name': 'neutron_ovn_metadata_agent', 'image': 'quay.io/openstack.kolla/neutron-metadata-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-ovn-metadata-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', 'neutron_metadata_socket:/var/lib/neutron/kolla/', '/run/openvswitch:/run/openvswitch:shared', '/run/netns:/run/netns:shared', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port python 6642'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-bgp-dragent', 'value': {'container_name': 'neutron_bgp_dragent', 'image': 'quay.io/openstack.kolla/neutron-bgp-dragent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-bgp-dragent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-bgp-dragent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port neutron-bgp-dragent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-infoblox-ipam-agent', 'value': {'container_name': 'neutron_infoblox_ipam_agent', 'image': 'quay.io/openstack.kolla/neutron-infoblox-ipam-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-infoblox-ipam-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-infoblox-ipam-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'neutron-metering-agent', 'value': {'container_name': 'neutron_metering_agent', 'image': 'quay.io/openstack.kolla/neutron-metering-agent:zed-ubuntu-jammy', 'privileged': True, 'enabled': False, 'group': 'neutron-metering-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/neutron-metering-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', ''], 'dimensions': {}}}) 
skipping: [localhost] => (item={'key': 'ironic-neutron-agent', 'value': {'container_name': 'ironic_neutron_agent', 'image': 'quay.io/openstack.kolla/ironic-neutron-agent:zed-ubuntu-jammy', 'privileged': False, 'enabled': False, 'group': 'ironic-neutron-agent', 'host_in_groups': True, 'volumes': ['/etc/kolla/ironic-neutron-agent/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port ironic-neutron-agent 5672'], 'timeout': '30'}}}) 
skipping: [localhost] => (item={'key': 'neutron-tls-proxy', 'value': {'container_name': 'neutron_tls_proxy', 'group': 'neutron-server', 'host_in_groups': True, 'enabled': 'no', 'image': 'quay.io/openstack.kolla/haproxy:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/neutron-tls-proxy/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl -u openstack:ysOnOQr0HCIyotq8Yx269r3UHWZEUUs0OqU5AglS 10.0.2.15:9697'], 'timeout': '30'}, 'haproxy': {'neutron_tls_proxy': {'enabled': False, 'mode': 'http', 'external': False, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}, 'neutron_tls_proxy_external': {'enabled': False, 'mode': 'http', 'external': True, 'port': '9696', 'listen_port': '9696', 'tls_backend': 'yes'}}}}) 

TASK [neutron : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Creating Neutron database] *************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Creating Neutron database user and setting permissions] ********************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Running Neutron bootstrap container] ***************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [neutron : Flush Handlers] ************************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [neutron : Restart neutron-server container] *******************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [neutron : Restart neutron-openvswitch-agent container] ********************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [neutron : Restart neutron-dhcp-agent container] ***************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [neutron : Restart neutron-l3-agent container] *****************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [neutron : Restart neutron-metadata-agent container] ***********************************************************************************************************************************************************************************************************
changed: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_kuryr_True

PLAY [Apply role kuryr] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_hacluster_True

PLAY [Apply role hacluster] ****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role heat] *********************************************************************************************************************************************************************************************************************************************************

TASK [heat : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/heat/tasks/deploy.yml for localhost

TASK [service-ks-register : heat | Creating services] **************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'name': 'heat', 'service_type': 'orchestration'})
changed: [localhost] => (item={'name': 'heat-cfn', 'service_type': 'cloudformation'})

TASK [service-ks-register : heat | Creating endpoints] *************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'service': 'heat', 'url': 'http://10.0.2.250:8004/v1/%(tenant_id)s', 'interface': 'internal'})
changed: [localhost] => (item={'service': 'heat', 'url': 'http://10.0.2.250:8004/v1/%(tenant_id)s', 'interface': 'public'})
changed: [localhost] => (item={'service': 'heat-cfn', 'url': 'http://10.0.2.250:8000/v1', 'interface': 'internal'})
changed: [localhost] => (item={'service': 'heat-cfn', 'url': 'http://10.0.2.250:8000/v1', 'interface': 'public'})

TASK [service-ks-register : heat | Creating projects] **************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=service)

TASK [service-ks-register : heat | Creating users] *****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'heat', 'project': 'service'})

TASK [service-ks-register : heat | Creating roles] *****************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=admin)
changed: [localhost] => (item=heat_stack_owner)
changed: [localhost] => (item=heat_stack_user)

TASK [service-ks-register : heat | Granting user roles] ************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'user': 'heat', 'role': 'admin', 'project': 'service'})
changed: [localhost] => (item={'user': 'admin', 'role': 'heat_stack_owner', 'project': 'admin'})

TASK [heat : Ensuring config directories exist] ********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'heat-api', 'value': {'container_name': 'heat_api', 'group': 'heat-api', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8004'], 'timeout': '30'}, 'haproxy': {'heat_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}, 'heat_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-api-cfn', 'value': {'container_name': 'heat_api_cfn', 'group': 'heat-api-cfn', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api-cfn:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api-cfn/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8000'], 'timeout': '30'}, 'haproxy': {'heat_api_cfn': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}, 'heat_api_cfn_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-engine', 'value': {'container_name': 'heat_engine', 'group': 'heat-engine', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-engine:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-engine/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port heat-engine 5672'], 'timeout': '30'}}})

TASK [heat : Check if policies shall be overwritten] ***************************************************************************************************************************************************************************************************************************

TASK [heat : Set heat policy file] *********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [heat : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [heat : Copying over config.json files for services] **********************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'heat-api', 'value': {'container_name': 'heat_api', 'group': 'heat-api', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8004'], 'timeout': '30'}, 'haproxy': {'heat_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}, 'heat_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-api-cfn', 'value': {'container_name': 'heat_api_cfn', 'group': 'heat-api-cfn', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api-cfn:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api-cfn/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8000'], 'timeout': '30'}, 'haproxy': {'heat_api_cfn': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}, 'heat_api_cfn_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-engine', 'value': {'container_name': 'heat_engine', 'group': 'heat-engine', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-engine:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-engine/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port heat-engine 5672'], 'timeout': '30'}}})

TASK [heat : Copying over heat.conf] *******************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'heat-api', 'value': {'container_name': 'heat_api', 'group': 'heat-api', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8004'], 'timeout': '30'}, 'haproxy': {'heat_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}, 'heat_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-api-cfn', 'value': {'container_name': 'heat_api_cfn', 'group': 'heat-api-cfn', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api-cfn:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api-cfn/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8000'], 'timeout': '30'}, 'haproxy': {'heat_api_cfn': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}, 'heat_api_cfn_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-engine', 'value': {'container_name': 'heat_engine', 'group': 'heat-engine', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-engine:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-engine/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port heat-engine 5672'], 'timeout': '30'}}})

TASK [heat : Copying over existing policy file] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'key': 'heat-api', 'value': {'container_name': 'heat_api', 'group': 'heat-api', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8004'], 'timeout': '30'}, 'haproxy': {'heat_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}, 'heat_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}}}) 
skipping: [localhost] => (item={'key': 'heat-api-cfn', 'value': {'container_name': 'heat_api_cfn', 'group': 'heat-api-cfn', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api-cfn:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api-cfn/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8000'], 'timeout': '30'}, 'haproxy': {'heat_api_cfn': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}, 'heat_api_cfn_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}}}) 
skipping: [localhost] => (item={'key': 'heat-engine', 'value': {'container_name': 'heat_engine', 'group': 'heat-engine', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-engine:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-engine/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port heat-engine 5672'], 'timeout': '30'}}}) 

TASK [heat : Copying over heat-api wsgi config] ********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [heat : Copying over heat-api-cfn wsgi config] ****************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [heat : Check heat containers] ********************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'heat-api', 'value': {'container_name': 'heat_api', 'group': 'heat-api', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8004'], 'timeout': '30'}, 'haproxy': {'heat_api': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}, 'heat_api_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8004', 'listen_port': '8004', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-api-cfn', 'value': {'container_name': 'heat_api_cfn', 'group': 'heat-api-cfn', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-api-cfn:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-api-cfn/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:8000'], 'timeout': '30'}, 'haproxy': {'heat_api_cfn': {'enabled': True, 'mode': 'http', 'external': False, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}, 'heat_api_cfn_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '8000', 'listen_port': '8000', 'tls_backend': 'no'}}}})
changed: [localhost] => (item={'key': 'heat-engine', 'value': {'container_name': 'heat_engine', 'group': 'heat-engine', 'enabled': True, 'image': 'quay.io/openstack.kolla/heat-engine:zed-ubuntu-jammy', 'volumes': ['/etc/kolla/heat-engine/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_port heat-engine 5672'], 'timeout': '30'}}})

TASK [heat : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [heat : Creating Heat database] *******************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [heat : Creating Heat database user and setting permissions] **************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [heat : Running Heat bootstrap container] *********************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [heat : Flush handlers] ***************************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [heat : Restart heat-api container] ****************************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [heat : Restart heat-api-cfn container] ************************************************************************************************************************************************************************************************************************
changed: [localhost]

RUNNING HANDLER [heat : Restart heat-engine container] *************************************************************************************************************************************************************************************************************************
changed: [localhost]

PLAY [Apply role horizon] ******************************************************************************************************************************************************************************************************************************************************

TASK [horizon : include_tasks] *************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/horizon/tasks/deploy.yml for localhost

TASK [horizon : Ensuring config directories exist] *****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'horizon', 'value': {'container_name': 'horizon', 'group': 'horizon', 'enabled': True, 'image': 'quay.io/openstack.kolla/horizon:zed-ubuntu-jammy', 'environment': {'ENABLE_BLAZAR': 'no', 'ENABLE_CLOUDKITTY': 'no', 'ENABLE_DESIGNATE': 'no', 'ENABLE_FREEZER': 'no', 'ENABLE_HEAT': 'yes', 'ENABLE_IRONIC': 'no', 'ENABLE_MAGNUM': 'no', 'ENABLE_MANILA': 'no', 'ENABLE_MASAKARI': 'no', 'ENABLE_MISTRAL': 'no', 'ENABLE_MURANO': 'no', 'ENABLE_NEUTRON_VPNAAS': 'no', 'ENABLE_OCTAVIA': 'no', 'ENABLE_SAHARA': 'no', 'ENABLE_SENLIN': 'no', 'ENABLE_SOLUM': 'no', 'ENABLE_TACKER': 'no', 'ENABLE_TROVE': 'no', 'ENABLE_VITRAGE': 'no', 'ENABLE_WATCHER': 'no', 'ENABLE_ZUN': 'no', 'FORCE_GENERATE': 'no'}, 'volumes': ['/etc/kolla/horizon/:/var/lib/kolla/config_files/:ro', '', '', '', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', '/tmp:/tmp'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:80'], 'timeout': '30'}, 'haproxy': {'horizon': {'enabled': True, 'mode': 'http', 'external': False, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}, 'horizon_redirect': {'enabled': False, 'mode': 'redirect', 'external': False, 'port': '80', 'listen_port': '80'}, 'horizon_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}, 'horizon_external_redirect': {'enabled': False, 'mode': 'redirect', 'external': True, 'port': '80', 'listen_port': '80'}, 'acme_client': {'enabled': True, 'with_frontend': False, 'custom_member_list': []}}}})

TASK [horizon : Set empty custom policy] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [horizon : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item={'name': 'ceilometer', 'enabled': 'no'}) 
skipping: [localhost] => (item={'name': 'cinder', 'enabled': 'no'}) 
skipping: [localhost] => (item={'name': 'cloudkitty', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'designate', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'freezer', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'ironic', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'magnum', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'manila', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'masakari', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'mistral', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'murano', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'octavia', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'sahara', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'senlin', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'solum', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'tacker', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'trove', 'enabled': False}) 
skipping: [localhost] => (item={'name': 'watcher', 'enabled': False}) 
included: /usr/local/share/kolla-ansible/ansible/roles/horizon/tasks/policy_item.yml for localhost => (item={'name': 'glance', 'enabled': True})
included: /usr/local/share/kolla-ansible/ansible/roles/horizon/tasks/policy_item.yml for localhost => (item={'name': 'heat', 'enabled': True})
included: /usr/local/share/kolla-ansible/ansible/roles/horizon/tasks/policy_item.yml for localhost => (item={'name': 'keystone', 'enabled': True})
included: /usr/local/share/kolla-ansible/ansible/roles/horizon/tasks/policy_item.yml for localhost => (item={'name': 'neutron', 'enabled': True})
included: /usr/local/share/kolla-ansible/ansible/roles/horizon/tasks/policy_item.yml for localhost => (item={'name': 'nova', 'enabled': True})

TASK [horizon : Update policy file name] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [horizon : Check if policies shall be overwritten] ************************************************************************************************************************************************************************************************************************

TASK [horizon : Update custom policy file name] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : Update policy file name] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [horizon : Check if policies shall be overwritten] ************************************************************************************************************************************************************************************************************************

TASK [horizon : Update custom policy file name] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : Update policy file name] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [horizon : Check if policies shall be overwritten] ************************************************************************************************************************************************************************************************************************

TASK [horizon : Update custom policy file name] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : Update policy file name] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [horizon : Check if policies shall be overwritten] ************************************************************************************************************************************************************************************************************************

TASK [horizon : Update custom policy file name] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : Update policy file name] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [horizon : Check if policies shall be overwritten] ************************************************************************************************************************************************************************************************************************

TASK [horizon : Update custom policy file name] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : Copying over config.json files for services] *******************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [horizon : Copying over horizon.conf] *************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/horizon/templates/horizon.conf.j2)

TASK [horizon : Copying over local_settings] ***********************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/horizon/templates/local_settings.j2)

TASK [horizon : Copying over custom_local_settings] ****************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/horizon/templates/custom_local_settings.j2)

TASK [horizon : Copying over existing policy file] *****************************************************************************************************************************************************************************************************************************

TASK [horizon : Copying over custom themes] ************************************************************************************************************************************************************************************************************************************

TASK [horizon : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : Deploy horizon container] **************************************************************************************************************************************************************************************************************************************
changed: [localhost] => (item={'key': 'horizon', 'value': {'container_name': 'horizon', 'group': 'horizon', 'enabled': True, 'image': 'quay.io/openstack.kolla/horizon:zed-ubuntu-jammy', 'environment': {'ENABLE_BLAZAR': 'no', 'ENABLE_CLOUDKITTY': 'no', 'ENABLE_DESIGNATE': 'no', 'ENABLE_FREEZER': 'no', 'ENABLE_HEAT': 'yes', 'ENABLE_IRONIC': 'no', 'ENABLE_MAGNUM': 'no', 'ENABLE_MANILA': 'no', 'ENABLE_MASAKARI': 'no', 'ENABLE_MISTRAL': 'no', 'ENABLE_MURANO': 'no', 'ENABLE_NEUTRON_VPNAAS': 'no', 'ENABLE_OCTAVIA': 'no', 'ENABLE_SAHARA': 'no', 'ENABLE_SENLIN': 'no', 'ENABLE_SOLUM': 'no', 'ENABLE_TACKER': 'no', 'ENABLE_TROVE': 'no', 'ENABLE_VITRAGE': 'no', 'ENABLE_WATCHER': 'no', 'ENABLE_ZUN': 'no', 'FORCE_GENERATE': 'no'}, 'volumes': ['/etc/kolla/horizon/:/var/lib/kolla/config_files/:ro', '', '', '', '/etc/localtime:/etc/localtime:ro', '/etc/timezone:/etc/timezone:ro', 'kolla_logs:/var/log/kolla/', '/tmp:/tmp'], 'dimensions': {}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': ['CMD-SHELL', 'healthcheck_curl http://10.0.2.15:80'], 'timeout': '30'}, 'haproxy': {'horizon': {'enabled': True, 'mode': 'http', 'external': False, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}, 'horizon_redirect': {'enabled': False, 'mode': 'redirect', 'external': False, 'port': '80', 'listen_port': '80'}, 'horizon_external': {'enabled': True, 'mode': 'http', 'external': True, 'port': '80', 'listen_port': '80', 'frontend_http_extra': ['use_backend acme_client_back if { path_reg ^/.well-known/acme-challenge/.+ }'], 'backend_http_extra': ['balance roundrobin'], 'tls_backend': 'no'}, 'horizon_external_redirect': {'enabled': False, 'mode': 'redirect', 'external': True, 'port': '80', 'listen_port': '80'}, 'acme_client': {'enabled': True, 'with_frontend': False, 'custom_member_list': []}}}})

TASK [horizon : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : include_tasks] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [horizon : Flush handlers] ************************************************************************************************************************************************************************************************************************************************

RUNNING HANDLER [horizon : Restart horizon container] **************************************************************************************************************************************************************************************************************************
changed: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_murano_True

PLAY [Apply role murano] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_solum_True

PLAY [Apply role solum] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_magnum_True

PLAY [Apply role magnum] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_mistral_True

PLAY [Apply role mistral] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_sahara_True

PLAY [Apply role sahara] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_manila_True

PLAY [Apply role manila] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_gnocchi_True

PLAY [Apply role gnocchi] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_ceilometer_True

PLAY [Apply role ceilometer] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_aodh_True

PLAY [Apply role aodh] *********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_barbican_True

PLAY [Apply role barbican] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_cyborg_True

PLAY [Apply role cyborg] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_designate_True

PLAY [Apply role designate] ****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_trove_True

PLAY [Apply role trove] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_watcher_True

PLAY [Apply role watcher] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_grafana_True

PLAY [Apply role grafana] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_cloudkitty_True

PLAY [Apply role cloudkitty] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_freezer_True

PLAY [Apply role freezer] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_senlin_True

PLAY [Apply role senlin] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_tacker_True

PLAY [Apply role tacker] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_octavia_True

PLAY [Apply role octavia] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_zun_True

PLAY [Apply role zun] **********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_skydive_True

PLAY [Apply role skydive] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_vitrage_True

PLAY [Apply role vitrage] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_blazar_True

PLAY [Apply role blazar] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_masakari_True

PLAY [Apply role masakari] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_venus_True

PLAY [Apply role venus] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************************************************************************************************************************************************************************************************************
localhost                  : ok=326  changed=228  unreachable=0    failed=0    skipped=220  rescued=0    ignored=1e

find: ‘/etc/kolla/globals.d’: No such file or directory
Pre-deployment checking : ansible-playbook -e @/etc/kolla/globals.yml  -e @/etc/kolla/passwords.yml -e CONFIG_DIR=/etc/kolla  -e kolla_action=precheck /usr/local/share/kolla-ansible/ansible/site.yml  --inventory ./all-in-one
[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

PLAY [Gather facts for all hosts] **********************************************************************************************************************************************************************************************************************************************

TASK [Gather facts] ************************************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Group hosts to determine when using --limit] *****************************************************************************************************************************************************************************************************************************
ok: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: all_using_limit_True

PLAY [Gather facts for all hosts (if using --limit)] ***************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Group hosts based on configuration] **************************************************************************************************************************************************************************************************************************************

TASK [Group hosts based on Kolla action] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [Group hosts based on enabled services] ***********************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=enable_aodh_False)
ok: [localhost] => (item=enable_barbican_False)
ok: [localhost] => (item=enable_blazar_False)
ok: [localhost] => (item=enable_ceilometer_False)
ok: [localhost] => (item=enable_ceph_rgw_False)
ok: [localhost] => (item=enable_cinder_False)
ok: [localhost] => (item=enable_cloudkitty_False)
ok: [localhost] => (item=enable_collectd_False)
ok: [localhost] => (item=enable_cyborg_False)
ok: [localhost] => (item=enable_designate_False)
ok: [localhost] => (item=enable_etcd_False)
ok: [localhost] => (item=enable_freezer_False)
ok: [localhost] => (item=enable_glance_True)
ok: [localhost] => (item=enable_gnocchi_False)
ok: [localhost] => (item=enable_grafana_False)
ok: [localhost] => (item=enable_hacluster_False)
ok: [localhost] => (item=enable_heat_True)
ok: [localhost] => (item=enable_horizon_True)
ok: [localhost] => (item=enable_influxdb_False)
ok: [localhost] => (item=enable_ironic_False)
ok: [localhost] => (item=enable_iscsid_False)
ok: [localhost] => (item=enable_keystone_True)
ok: [localhost] => (item=enable_kuryr_False)
ok: [localhost] => (item=enable_loadbalancer_True)
ok: [localhost] => (item=enable_magnum_False)
ok: [localhost] => (item=enable_manila_False)
ok: [localhost] => (item=enable_mariadb_True)
ok: [localhost] => (item=enable_masakari_False)
ok: [localhost] => (item=enable_memcached_True)
ok: [localhost] => (item=enable_mistral_False)
ok: [localhost] => (item=enable_multipathd_False)
ok: [localhost] => (item=enable_murano_False)
ok: [localhost] => (item=enable_neutron_True)
ok: [localhost] => (item=enable_nova_True)
ok: [localhost] => (item=enable_octavia_False)
ok: [localhost] => (item=enable_opensearch_True)
ok: [localhost] => (item=enable_opensearch_dashboards_True)
ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
ok: [localhost] => (item=enable_outward_rabbitmq_False)
ok: [localhost] => (item=enable_ovn_False)
ok: [localhost] => (item=enable_placement_True)
ok: [localhost] => (item=enable_prometheus_False)
ok: [localhost] => (item=enable_rabbitmq_True)
ok: [localhost] => (item=enable_redis_False)
ok: [localhost] => (item=enable_sahara_False)
ok: [localhost] => (item=enable_senlin_False)
ok: [localhost] => (item=enable_skydive_False)
ok: [localhost] => (item=enable_solum_False)
ok: [localhost] => (item=enable_swift_False)
ok: [localhost] => (item=enable_tacker_False)
ok: [localhost] => (item=enable_telegraf_False)
ok: [localhost] => (item=enable_trove_False)
ok: [localhost] => (item=enable_venus_False)
ok: [localhost] => (item=enable_vitrage_False)
ok: [localhost] => (item=enable_watcher_False)
ok: [localhost] => (item=enable_zun_False)

PLAY [Apply role prechecks] ****************************************************************************************************************************************************************************************************************************************************

TASK [prechecks : Fail if group loadbalancer not exists or it is empty] ********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/prechecks/tasks/host_os_checks.yml for localhost

TASK [prechecks : Checking host OS distribution] *******************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Checking host OS release or version] *************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Checking if CentOS is Stream] ********************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Fail if not running on CentOS Stream] ************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Ensure /etc/localtime exist] *********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Fail if /etc/localtime is absent] ****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Ensure /etc/timezone exist] **********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Fail if /etc/timezone is absent] *****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Checking Docker version] *************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Checking empty passwords in passwords.yml. Run kolla-genpwd if this task fails] ******************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Check if nscd is running] ************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Fail if nscd is running] *************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Validate that internal and external vip address are different when TLS is enabled only on either the internal and external network] **************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Validate that enable_ceph is disabled] ***********************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Checking docker SDK version] *********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Checking Ansible version] ************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [prechecks : Check if config_owner_user existed] **************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Check if config_owner_group existed] *************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Check if ansible user can do passwordless sudo] **************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [prechecks : Check if external mariadb hosts are reachable from the load balancer] ****************************************************************************************************************************************************************************************
skipping: [localhost] => (item=localhost) 

TASK [prechecks : Check if external database address is reachable from all hosts] **********************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Apply role common] *******************************************************************************************************************************************************************************************************************************************************

TASK [common : include_tasks] **************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/precheck.yml for localhost

TASK [service-precheck : common | Validate inventory groups] *******************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=fluentd) 
skipping: [localhost] => (item=kolla-toolbox) 
skipping: [localhost] => (item=cron) 

PLAY [Apply role loadbalancer] *************************************************************************************************************************************************************************************************************************************************

TASK [loadbalancer : include_tasks] ********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/loadbalancer/tasks/precheck.yml for localhost

TASK [service-precheck : loadbalancer | Validate inventory groups] *************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=haproxy) 
skipping: [localhost] => (item=proxysql) 
skipping: [localhost] => (item=keepalived) 

TASK [loadbalancer : Get container facts] **************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Group hosts by whether they are running keepalived] *******************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Group hosts by whether they are running HAProxy] **********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Group hosts by whether they are running ProxySQL] *********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Set facts about whether we can run HAProxy and keepalived VIP prechecks] **********************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking if external haproxy certificate exists] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Fail if external haproxy certificate is absent] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking if internal haproxy certificate exists] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Fail if internal haproxy certificate is absent] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking the kolla_external_vip_interface is present] *****************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking the kolla_external_vip_interface is active] ******************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking if kolla_internal_vip_address and kolla_external_vip_address are not pingable from any node] *****************************************************************************************************************************************************
ok: [localhost] => (item=10.0.2.250)
ok: [localhost] => (item=10.0.2.250)

TASK [loadbalancer : Checking free port for HAProxy stats] *********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for HAProxy monitor (api interface)] ***************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for HAProxy monitor (vip interface)] ***************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for ProxySQL admin (api interface)] ****************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for ProxySQL admin (vip interface)] ****************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking if kolla_internal_vip_address is in the same network as api_interface on all nodes] **************************************************************************************************************************************************************
[DEPRECATION WARNING]: Use 'ansible.utils.ipaddr' module instead. This feature will be removed from ansible.netcommon in a release after 2024-01-01. Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
ok: [localhost]

TASK [loadbalancer : Getting haproxy stat] *************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Setting haproxy stat fact] ********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Aodh API HAProxy] ******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Barbican API HAProxy] **************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Blazar API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Ceph RadosGW HAProxy] **************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Cinder API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Cloudkitty API HAProxy] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Cyborg API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Designate API HAProxy] *************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Glance API HAProxy] ****************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Gnocchi API HAProxy] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Freezer API HAProxy] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Grafana server HAProxy] ************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Heat API HAProxy] ******************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Heat API CFN HAProxy] **************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Horizon HAProxy] *******************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Ironic API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Ironic Inspector HAProxy] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Keystone Internal HAProxy] *********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Keystone Public HAProxy] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Magnum API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Manila API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for MariaDB HAProxy/ProxySQL] **********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Masakari API HAProxy] **************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Mistral API HAProxy] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Murano API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Neutron Server HAProxy] ************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Nova API HAProxy] ******************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Nova Metadata HAProxy] *************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Nova NoVNC HAProxy] ****************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Nova Serial Proxy HAProxy] *********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Nova Spice HTML5 HAProxy] **********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Nova Placement API HAProxy] ********************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for Octavia API HAProxy] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for OpenSearch HAProxy] ****************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for OpenSearch Dashboards HAProxy] *****************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for RabbitMQ Management HAProxy] *******************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [loadbalancer : Checking free port for outward RabbitMQ Management HAProxy] ***********************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Sahara API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Senlin API HAProxy] ****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Solum Application Deployment HAProxy] **********************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Solum Image Builder HAProxy] *******************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Swift Proxy Server HAProxy] ********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Tacker Server HAProxy] *************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Trove API HAProxy] *****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Watcher API HAProxy] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Zun API HAProxy] *******************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Checking free port for Vitrage API HAProxy] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Check if firewalld is running] ****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [loadbalancer : Fail if firewalld is not running] *************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : aodh] *****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : barbican] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : blazar] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : ceph-rgw] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : cinder] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : cloudkitty] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : cyborg] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : designate] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : etcd] *****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : freezer] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : glance] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : gnocchi] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : grafana] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : heat] *****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : horizon] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : influxdb] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : ironic] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : keystone] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : magnum] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : manila] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : mariadb] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : masakari] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : memcached] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : mistral] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : murano] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : neutron] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : placement] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : nova] *****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : nova-cell] ************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : octavia] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : opensearch] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : prometheus] ***********************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : rabbitmq] *************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : sahara] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : senlin] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : skydive] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : solum] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : swift] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : tacker] ***************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : trove] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : venus] ****************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : vitrage] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : watcher] **************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [include_role : zun] ******************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_collectd_True

PLAY [Apply role collectd] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_influxdb_True

PLAY [Apply role influxdb] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_telegraf_True

PLAY [Apply role telegraf] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

PLAY [Apply role redis] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role mariadb] ******************************************************************************************************************************************************************************************************************************************************

TASK [mariadb : Group MariaDB hosts based on shards] ***************************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=localhost)

TASK [mariadb : include_tasks] *************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/mariadb/tasks/precheck.yml for localhost

TASK [service-precheck : mariadb | Validate inventory groups] ******************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=mariadb) 
skipping: [localhost] => (item=mariadb-clustercheck) 

TASK [mariadb : Get container facts] *******************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Checking free port for MariaDB] ********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Checking free port for MariaDB WSREP] **************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Checking free port for MariaDB IST] ****************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [mariadb : Checking free port for MariaDB SST] ****************************************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY [Apply role memcached] ****************************************************************************************************************************************************************************************************************************************************

TASK [memcached : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/memcached/tasks/precheck.yml for localhost

TASK [service-precheck : memcached | Validate inventory groups] ****************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=memcached) 

TASK [memcached : Get container facts] *****************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [memcached : Checking free port for Memcached] ****************************************************************************************************************************************************************************************************************************
ok: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_prometheus_True

PLAY [Apply role prometheus] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

PLAY [Apply role iscsi] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_multipathd_True

PLAY [Apply role multipathd] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role rabbitmq] *****************************************************************************************************************************************************************************************************************************************************

TASK [rabbitmq : include_tasks] ************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/precheck.yml for localhost

TASK [service-precheck : rabbitmq | Validate inventory groups] *****************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=rabbitmq) 

TASK [rabbitmq : Get container facts] ******************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [rabbitmq : Checking free port for RabbitMQ] ******************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [rabbitmq : Checking free port for RabbitMQ Management] *******************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [rabbitmq : Checking free port for RabbitMQ Cluster] **********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [rabbitmq : Checking free port for RabbitMQ EPMD] *************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [rabbitmq : Check if all rabbit hostnames are resolvable] *****************************************************************************************************************************************************************************************************************
ok: [localhost] => (item=localhost)

TASK [rabbitmq : Check if each rabbit hostname resolves uniquely to the proper IP address] *************************************************************************************************************************************************************************************
skipping: [localhost] => (item=[{'changed': False, 'stdout': '10.0.2.15       STREAM anas\n10.0.2.15       DGRAM  \n10.0.2.15       RAW    ', 'stderr': '', 'rc': 0, 'cmd': ['getent', 'ahostsv4', 'anas'], 'start': '2023-04-21 02:18:29.358043', 'end': '2023-04-21 02:18:29.360117', 'delta': '0:00:00.002074', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'getent ahostsv4 anas', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stderr_lines': [], 'failed': False, 'item': 'localhost', 'ansible_loop_var': 'item'}, '10.0.2.15       STREAM anas']) 
skipping: [localhost] => (item=[{'changed': False, 'stdout': '10.0.2.15       STREAM anas\n10.0.2.15       DGRAM  \n10.0.2.15       RAW    ', 'stderr': '', 'rc': 0, 'cmd': ['getent', 'ahostsv4', 'anas'], 'start': '2023-04-21 02:18:29.358043', 'end': '2023-04-21 02:18:29.360117', 'delta': '0:00:00.002074', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'getent ahostsv4 anas', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stderr_lines': [], 'failed': False, 'item': 'localhost', 'ansible_loop_var': 'item'}, '10.0.2.15       DGRAM  ']) 
skipping: [localhost] => (item=[{'changed': False, 'stdout': '10.0.2.15       STREAM anas\n10.0.2.15       DGRAM  \n10.0.2.15       RAW    ', 'stderr': '', 'rc': 0, 'cmd': ['getent', 'ahostsv4', 'anas'], 'start': '2023-04-21 02:18:29.358043', 'end': '2023-04-21 02:18:29.360117', 'delta': '0:00:00.002074', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'getent ahostsv4 anas', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stderr_lines': [], 'failed': False, 'item': 'localhost', 'ansible_loop_var': 'item'}, '10.0.2.15       RAW    ']) 

TASK [rabbitmq : Check if TLS certificate exists for RabbitMQ] *****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Check if TLS key exists for RabbitMQ] *************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Checking free port for outward RabbitMQ] **********************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Checking free port for outward RabbitMQ Management] ***********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Checking free port for outward RabbitMQ Cluster] **************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Checking free port for outward RabbitMQ EPMD] *****************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Check if all outward rabbit hostnames are resolvable] *********************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=localhost) 

TASK [rabbitmq : Check if each rabbit hostname resolves uniquely to the proper IP address] *************************************************************************************************************************************************************************************

TASK [rabbitmq : Check if TLS certificate exists for outward RabbitMQ] *********************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [rabbitmq : Check if TLS key exists for outward RabbitMQ] *****************************************************************************************************************************************************************************************************************
skipping: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_outward_rabbitmq_True

PLAY [Apply role rabbitmq (outward)] *******************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

PLAY [Apply role etcd] *********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role keystone] *****************************************************************************************************************************************************************************************************************************************************

TASK [keystone : include_tasks] ************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/precheck.yml for localhost

TASK [service-precheck : keystone | Validate inventory groups] *****************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=keystone) 
skipping: [localhost] => (item=keystone-ssh) 
skipping: [localhost] => (item=keystone-fernet) 

TASK [keystone : Get container facts] ******************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Checking free port for Keystone Public] ***********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Checking free port for Keystone SSH] **************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [keystone : Checking fernet_token_expiry] *********************************************************************************************************************************************************************************************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY [Apply role opensearch] ***************************************************************************************************************************************************************************************************************************************************

TASK [opensearch : include_tasks] **********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/opensearch/tasks/precheck.yml for localhost

TASK [service-precheck : opensearch | Validate inventory groups] ***************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=opensearch) 
skipping: [localhost] => (item=opensearch-dashboards) 

TASK [opensearch : Get container facts] ****************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [opensearch : Checking free port for Opensearch] **************************************************************************************************************************************************************************************************************************
ok: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

PLAY [Apply role swift] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_ceph_rgw_True

PLAY [Apply role ceph-rgw] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role glance] *******************************************************************************************************************************************************************************************************************************************************

TASK [glance : include_tasks] **************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/glance/tasks/precheck.yml for localhost

TASK [service-precheck : glance | Validate inventory groups] *******************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=glance-api) 
skipping: [localhost] => (item=glance-tls-proxy) 

TASK [glance : Get container facts] ********************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [glance : Checking free port for Glance API] ******************************************************************************************************************************************************************************************************************************
ok: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_ironic_True

PLAY [Apply role ironic] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

PLAY [Apply role cinder] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role placement] ****************************************************************************************************************************************************************************************************************************************************

TASK [placement : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/placement/tasks/precheck.yml for localhost

TASK [service-precheck : placement | Validate inventory groups] ****************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=placement-api) 

TASK [placement : Get container facts] *****************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [placement : Checking free port for Placement API] ************************************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY [Bootstrap nova API databases] ********************************************************************************************************************************************************************************************************************************************

TASK [Bootstrap deploy] ********************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [Bootstrap upgrade] *******************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Bootstrap nova cell databases] *******************************************************************************************************************************************************************************************************************************************

TASK [Bootstrap deploy] ********************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [Bootstrap upgrade] *******************************************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Apply role nova] *********************************************************************************************************************************************************************************************************************************************************

TASK [nova : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova/tasks/precheck.yml for localhost

TASK [service-precheck : nova | Validate inventory groups] *********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=nova-api) 
skipping: [localhost] => (item=nova-scheduler) 
skipping: [localhost] => (item=nova-super-conductor) 

TASK [nova : Get container facts] **********************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova : Checking free port for Nova API] **********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova : Checking free port for Nova Metadata] *****************************************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY [Apply role nova-cell] ****************************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/nova-cell/tasks/precheck.yml for localhost

TASK [service-precheck : nova | Validate inventory groups] *********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=nova-libvirt) 
skipping: [localhost] => (item=nova-ssh) 
skipping: [localhost] => (item=nova-novncproxy) 
skipping: [localhost] => (item=nova-spicehtml5proxy) 
skipping: [localhost] => (item=nova-serialproxy) 
skipping: [localhost] => (item=nova-conductor) 
skipping: [localhost] => (item=nova-compute) 
skipping: [localhost] => (item=nova-compute-ironic) 

TASK [nova-cell : Get container facts] *****************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Checking available compute nodes in inventory] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Checking free port for Nova NoVNC Proxy] *********************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Checking free port for Nova Serial Proxy] ********************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Checking free port for Nova Spice HTML5 Proxy] ***************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Checking free port for Nova SSH (API interface)] *************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Checking free port for Nova SSH (migration interface)] *******************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [nova-cell : Checking free port for Nova Libvirt] *************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Checking that host libvirt is not running] *******************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [nova-cell : Checking that nova_libvirt container is not running] *********************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Refresh nova scheduler cell cache] ***************************************************************************************************************************************************************************************************************************************

TASK [nova : Refresh cell cache in nova scheduler] *****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Reload global Nova super conductor services] *****************************************************************************************************************************************************************************************************************************

TASK [nova : Reload nova super conductor services to remove RPC version pin] ***************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Reload Nova cell services] ***********************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : Reload nova cell services to remove RPC version cap] *********************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=nova-conductor) 
skipping: [localhost] => (item=nova-compute) 
skipping: [localhost] => (item=nova-compute-ironic) 
skipping: [localhost] => (item=nova-novncproxy) 
skipping: [localhost] => (item=nova-serialproxy) 
skipping: [localhost] => (item=nova-spicehtml5proxy) 

PLAY [Reload global Nova API services] *****************************************************************************************************************************************************************************************************************************************

TASK [nova : Reload nova API services to remove RPC version pin] ***************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=nova-scheduler) 
skipping: [localhost] => (item=nova-api) 

PLAY [Run Nova API online data migrations] *************************************************************************************************************************************************************************************************************************************

TASK [nova : Run Nova API online database migrations] **************************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Run Nova cell online data migrations] ************************************************************************************************************************************************************************************************************************************

TASK [nova-cell : Run Nova cell online database migrations] ********************************************************************************************************************************************************************************************************************
skipping: [localhost]

PLAY [Apply role openvswitch] **************************************************************************************************************************************************************************************************************************************************

TASK [openvswitch : include_tasks] *********************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/precheck.yml for localhost

TASK [service-precheck : openvswitch | Validate inventory groups] **************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=openvswitch-db-server) 
skipping: [localhost] => (item=openvswitch-vswitchd) 

TASK [openvswitch : Get container facts] ***************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [openvswitch : Checking free port for OVSDB] ******************************************************************************************************************************************************************************************************************************
ok: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_openvswitch_True_enable_ovs_dpdk_True

PLAY [Apply role ovs-dpdk] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_ovn_True

PLAY [Apply role ovn-controller] ***********************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role ovn-db] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role neutron] ******************************************************************************************************************************************************************************************************************************************************

TASK [neutron : include_tasks] *************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/neutron/tasks/precheck.yml for localhost

TASK [service-precheck : neutron | Validate inventory groups] ******************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=neutron-server) 
skipping: [localhost] => (item=neutron-openvswitch-agent) 
skipping: [localhost] => (item=neutron-linuxbridge-agent) 
skipping: [localhost] => (item=neutron-dhcp-agent) 
skipping: [localhost] => (item=neutron-l3-agent) 
skipping: [localhost] => (item=neutron-sriov-agent) 
skipping: [localhost] => (item=neutron-mlnx-agent) 
skipping: [localhost] => (item=neutron-eswitchd) 
skipping: [localhost] => (item=neutron-metadata-agent) 
skipping: [localhost] => (item=neutron-ovn-metadata-agent) 
skipping: [localhost] => (item=neutron-bgp-dragent) 
skipping: [localhost] => (item=neutron-infoblox-ipam-agent) 
skipping: [localhost] => (item=neutron-metering-agent) 
skipping: [localhost] => (item=ironic-neutron-agent) 
skipping: [localhost] => (item=neutron-tls-proxy) 

TASK [neutron : Get container facts] *******************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [neutron : Checking free port for Neutron Server] *************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [neutron : Checking number of network agents] *****************************************************************************************************************************************************************************************************************************
skipping: [localhost]

TASK [neutron : Checking tenant network types] *********************************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=vxlan) 

TASK [neutron : Checking whether Ironic enabled] *******************************************************************************************************************************************************************************************************************************
skipping: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_kuryr_True

PLAY [Apply role kuryr] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_hacluster_True

PLAY [Apply role hacluster] ****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY [Apply role heat] *********************************************************************************************************************************************************************************************************************************************************

TASK [heat : include_tasks] ****************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/heat/tasks/precheck.yml for localhost

TASK [service-precheck : heat | Validate inventory groups] *********************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=heat-api) 
skipping: [localhost] => (item=heat-api-cfn) 
skipping: [localhost] => (item=heat-engine) 

TASK [heat : Get container facts] **********************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [heat : Checking free port for Heat API] **********************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [heat : Checking free port for Heat API CFN] ******************************************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY [Apply role horizon] ******************************************************************************************************************************************************************************************************************************************************

TASK [horizon : include_tasks] *************************************************************************************************************************************************************************************************************************************************
included: /usr/local/share/kolla-ansible/ansible/roles/horizon/tasks/precheck.yml for localhost

TASK [service-precheck : horizon | Validate inventory groups] ******************************************************************************************************************************************************************************************************************
skipping: [localhost] => (item=horizon) 

TASK [horizon : Get container facts] *******************************************************************************************************************************************************************************************************************************************
ok: [localhost]

TASK [horizon : Checking free port for Horizon] ********************************************************************************************************************************************************************************************************************************
ok: [localhost]
[WARNING]: Could not match supplied host pattern, ignoring: enable_murano_True

PLAY [Apply role murano] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_solum_True

PLAY [Apply role solum] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_magnum_True

PLAY [Apply role magnum] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_mistral_True

PLAY [Apply role mistral] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_sahara_True

PLAY [Apply role sahara] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_manila_True

PLAY [Apply role manila] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_gnocchi_True

PLAY [Apply role gnocchi] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_ceilometer_True

PLAY [Apply role ceilometer] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_aodh_True

PLAY [Apply role aodh] *********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_barbican_True

PLAY [Apply role barbican] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_cyborg_True

PLAY [Apply role cyborg] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_designate_True

PLAY [Apply role designate] ****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_trove_True

PLAY [Apply role trove] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_watcher_True

PLAY [Apply role watcher] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_grafana_True

PLAY [Apply role grafana] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_cloudkitty_True

PLAY [Apply role cloudkitty] ***************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_freezer_True

PLAY [Apply role freezer] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_senlin_True

PLAY [Apply role senlin] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_tacker_True

PLAY [Apply role tacker] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_octavia_True

PLAY [Apply role octavia] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_zun_True

PLAY [Apply role zun] **********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_skydive_True

PLAY [Apply role skydive] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_vitrage_True

PLAY [Apply role vitrage] ******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_blazar_True

PLAY [Apply role blazar] *******************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_masakari_True

PLAY [Apply role masakari] *****************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: enable_venus_True

PLAY [Apply role venus] ********************************************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************************************************************************************************************************************************************************************************************
localhost                  : ok=94   changed=0    unreachable=0    failed=0    skipped=148  rescued=0    ignored=0
